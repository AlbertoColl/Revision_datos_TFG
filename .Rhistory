### SETUP ----
library(tidyverse)
library(multcompView)
library(car)
library(rstatix)
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./scripts septiembre 2024-2025/0_data_lab.R")
source(file = "./scripts septiembre 2024-2025/1_funciones_graficas.R")
View(datos)
data_1 <- filter(datos, cultivo == "wild")
View(data_1)
### Exploracion ----
summ <- data_1 %>%
group_by(playa) %>%
get_summary_stats(type = "mean_se")
View(datos)
View(summ)
### Exploracion ----
summ <- data_1 %>%
group_by(playa) %>%
get_summary_stats(SOD_p,type = "mean_se")
View(datos)
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa)) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1)
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.8) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1)
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.8) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1, width = 0.4)
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.6) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1, width = 0.4)
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.6) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1, width = 0.4) +
labs(title = "Actividad SOD columnar por playa") +
theme(legend.position = "none")
### Exploracion ----
summ <- data_1 %>%
group_by(playa) %>%
get_summary_stats(SOD_t,type = "mean_se")
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.6) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1, width = 0.4) +
labs(title = "Actividad SOD tentacular por playa") +
theme(legend.position = "none")
### Exploracion ----
summ <- data_1 %>%
group_by(playa) %>%
get_summary_stats(CAT_p,type = "mean_se")
### Exploracion ----
summ <- data_1 %>%
group_by(playa) %>%
get_summary_stats(CAT_p,type = "mean_se")
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.6) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1, width = 0.4) +
labs(title = "Actividad CAT columnar por playa") +
theme(legend.position = "none")
### Exploracion ----
summ <- data_1 %>%
group_by(playa) %>%
get_summary_stats(CAT_t,type = "mean_se")
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.6) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1, width = 0.4) +
labs(title = "Actividad CAT tentacular por playa") +
theme(legend.position = "none")
### Exploracion ----
summ <- data_1 %>%
group_by(playa) %>%
get_summary_stats(GPx_p,type = "mean_se")
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.6) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1, width = 0.4) +
labs(title = "Actividad GPx_p por playa") +
theme(legend.position = "none")
### Exploracion ----
summ <- data_1 %>%
group_by(playa) %>%
get_summary_stats(GPx_t,type = "mean_se")
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.6) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1, width = 0.4) +
labs(title = "Actividad GPx_t por playa") +
theme(legend.position = "none")
### Exploracion ----
summ <- data_1 %>%
group_by(playa) %>%
get_summary_stats(TEAC_t,type = "mean_se")
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.6) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1, width = 0.4) +
labs(title = "Actividad TEAC_t por playa") +
theme(legend.position = "none")
View(data_1)
### Exploracion ----
summ <- data_1 %>%
group_by(playa) %>%
get_summary_stats(MDA_p,type = "mean_se")
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.6) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1, width = 0.4) +
labs(title = "MDA columnar por playa") +
theme(legend.position = "none")
### Exploracion ----
summ <- data_1 %>%
group_by(playa) %>%
get_summary_stats(MDA_t,type = "mean_se")
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.6) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1, width = 0.4) +
labs(title = "MDA tentacular por playa") +
theme(legend.position = "none")
View(data_1)
# Hacemos anova de 1 via si cumple asunciones
modelos <- lapply(colnames(data_1[c(5:24)]), function(x){
aov(formula = as.formula(paste0(x, " ~ playa")), data_1)})
sapply(modelos, function(x){
print(x$terms[[2]])
shapiro.test(residuals(x))})
### Exploracion ----
summ <- data_1 %>%
group_by(playa) %>%
get_summary_stats(G6PDH_t,type = "mean_se")
ggplot(summ, aes(x = playa)) +
geom_col(aes(y = mean, fill = playa, color = playa), alpha = 0.6) +
geom_errorbar(aes(ymax = mean+se, ymin = mean-se, color = playa), linewidth = 1, width = 0.4) +
labs(title = "Actividad G6PDH_t por playa") +
theme(legend.position = "none")
ggplot(data_1, aes(x = playa)) +
geom_boxplot(aes(y = G6PDH_t, fill = playa, color = playa)) +
labs(title = "Actividad G6PDH_t por playa") +
theme(legend.position = "none")
ggplot(data_1, aes(x = playa)) +
geom_boxplot(aes(y = G6PDH_t, fill = playa, color = playa), alpha = 0.3) +
labs(title = "Actividad G6PDH_t por playa") +
theme(legend.position = "none")
ggplot(data_1, aes(x = playa)) +
geom_boxplot(aes(y = G6PDH_t, fill = playa, color = playa), alpha = 0.4, linewidth = 1) +
labs(title = "Actividad G6PDH_t por playa") +
theme(legend.position = "none")
ggplot(data_1, aes(x = playa)) +
geom_boxplot(aes(y = G6PDH_t, fill = playa, color = playa), alpha = 0.6, linewidth = 1) +
labs(title = "Actividad G6PDH_t por playa") +
theme(legend.position = "none")
ggplot(data_1, aes(x = playa, y = G6PDH_t)) +
geom_boxplot(aes(fill = playa, color = playa), alpha = 0.5, linewidth = 1) +
geom_point(aes(color = playa)) +
labs(title = "Actividad G6PDH_t por playa") +
theme(legend.position = "none")
ggplot(data_1, aes(x = playa, y = G6PDH_t)) +
geom_boxplot(aes(fill = playa, color = playa), alpha = 0.5, linewidth = 1) +
geom_point(aes(color = playa), position = position_jitterdodge()) +
labs(title = "Actividad G6PDH_t por playa") +
theme(legend.position = "none")
ggplot(data_1, aes(x = playa, y = G6PDH_t)) +
geom_boxplot(aes(fill = playa, color = playa), alpha = 0.5, linewidth = 1) +
geom_point(aes(color = playa), position = position_jitterdodge(), size = 2) +
labs(title = "Actividad G6PDH_t por playa") +
theme(legend.position = "none")
ggplot(data_1, aes(x = playa, y = G6PDH_t)) +
geom_boxplot(aes(fill = playa, color = playa), alpha = 0.3, linewidth = 1) +
geom_point(aes(color = playa), position = position_jitterdodge(), size = 2) +
labs(title = "Actividad G6PDH_t por playa") +
theme(legend.position = "none")
data_1$G6PDH_t[12]
data_1$G6PDH_t[12] <- NA
# Hacemos anova de 1 via si cumple asunciones
modelos <- lapply(colnames(data_1[c(5:24)]), function(x){
aov(formula = as.formula(paste0(x, " ~ playa")), data_1)})
sapply(modelos, function(x){
print(x$terms[[2]])
shapiro.test(residuals(x))})
# Homogeneidad de varianzas
sapply(modelos, function(x){
print(leveneTest(x))})
# Homogeneidad de varianzas
sapply(modelos, function(x){
print(leveneTest(x))})
ggplot(data_1, aes(x = playa, y = GPx_p)) +
geom_boxplot(aes(fill = playa, color = playa), alpha = 0.3, linewidth = 1) +
geom_point(aes(color = playa), position = position_jitterdodge(), size = 2) +
labs(title = "Actividad G6PDH_t por playa") +
theme(legend.position = "none")
ggplot(data_1, aes(x = playa, y = GPx_p)) +
geom_boxplot(aes(fill = playa, color = playa), alpha = 0.3, linewidth = 1) +
geom_point(aes(color = playa), position = position_jitterdodge(), size = 2) +
labs(title = "Actividad GPx_p por playa") +
theme(legend.position = "none")
### RESULTADOS DEL ANOVA ----
for (i in c(1:20)) {
print(colnames(data_2[5:24][i]))
print(summary(modelos[[i]]))}
### RESULTADOS DEL ANOVA ----
for (i in c(1:20)) {
print(colnames(data_1[5:24][i]))
print(summary(modelos[[i]]))}
modelos <- lapply(colnames(data_1[c(5:24)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa")), data_1)})
modelos <- lapply(colnames(data_1[c(5:24)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa")), data_1)}
get_anova_table(correction = "BH"))
modelos <- lapply(colnames(data_1[c(5:24)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa")), data_1)
get_anova_table(correction = "BH")})
modelos <- lapply(colnames(data_1[c(5:24)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa")), data_1)
get_anova_table()})
modelos <- lapply(colnames(data_1[c(5:24)]), function(x){
get_anova_table(anova_test(formula = as.formula(paste0(x, " ~ playa")), data_1))})
View(modelos)
modelos[1]
modelos <- lapply(colnames(data_1[c(5:24)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa")), data_1)})
modelos[1]
modelos <- lapply(colnames(data_1[c(5:24)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa")), data_1)})
modelos
View(modelos)
modelos <- 1
source("~/GitHub/Revision_datos_TFG/scripts septiembre 2024-2025/3_descriptiva_modelos_entorno natural.R", echo=TRUE)
modelos <- lapply(colnames(data_1[c(5:24)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa")), data_1)})
View(modelos)
modelos[1]
modelos[[1]]$Effect
modelos[[1]]$p
anova_test(data_1, SOD_p ~ playa)
data_long <- data_1 %>%
pivot_longer(cols = data_1[5:24], names_to = "variable", values_to = "valor")
data_1[5:24]
data_long <- data_1 %>%
pivot_longer(cols = ends_with("_p")|ends_with("_t"), names_to = "variable", values_to = "valor")
View(data_long)
data_long %>%
group_by(variable) %>%
shapiro.test()
data_long %>%
group_by(variable) %>%
shapiro.test(valor)
data_long %>%
group_by(variable) %>%
shapiro.test(x = valor)
data_long %>%
group_by(variable) %>%
shapiro.test()
data_long %>%
group_by(variable, playa) %>%
shapiro.test(valor)
data_long %>%
group_by(variable, playa
)
data_long %>%
group_by(variable, playa) %>%
get_summary_stats("mean_se")
data_long %>%
group_by(variable, playa) %>%
get_summary_stats(valor, "mean_se")
data_long %>%
group_by(variable, playa) %>%
get_summary_stats(valor,type = "mean_se")
View(data_long)
data_long <- data_1 %>%
pivot_longer(cols = ends_with("_p")|ends_with("_t"), names_to = "parametro", values_to = "valor")
data_long %>%
group_by(variable, playa) %>%
get_summary_stats(valor,type = "mean_se")
data_long %>%
group_by(parametro, playa) %>%
get_summary_stats(valor,type = "mean_se")
data_long %>%
group_by(parametro) %>%
anova_test(formula = valor ~ playa)
view(data_long %>%
group_by(parametro) %>%
anova_test(formula = valor ~ playa))
view(data_long %>%
group_by(parametro, playa) %>%
anova_test(formula = valor ~ playa))
data_long %>%
group_by(parametro, playa) %>%
get_summary_stats(valor,type = "mean_se")
data_long %>%
group_by(parametro, playa) %>%
get_summary_stats(valor,type = "mean_se")
data_long <- data_1 %>%
pivot_longer(cols = ends_with("_p")|ends_with("_t"), names_to = "parametro", values_to = "valor")
view(data_long %>%
group_by(parametro, playa) %>%
anova_test(formula = valor ~ playa))
names(data_1[5:24])
paste0(names(data_1[5:24])[i],"~","playa")
paste0(names(data_1[5:24]),"~","playa")
formula(paste0(names(data_1[5:24])[i],"~","Species"))
formula(paste0(names(data_1[5:24]),"~","Species"))
temp_anova_results <- data_1 %>% anova_test(formula(paste0(names(data_1[5:24])[i],"~","Species")))
modelos <- lapply(colnames(data_1[c(5:24)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa")), data_1)})
anova_summary(modelos)
anova_summary(modelos[1])
anova_summary(modelos[[1]])
modelos[11]
merge(modelos)
merge(modelos[[1]], modelos[[2]])
View(modelos)
view(modelos[1])
merge(modelos[1], modelos[2])
merge(as.data.frame(modelos[1]), as.data.frame(modelos[2]))
get_anova_table(modelos[1])
get_anova_table(modelos[[1]])
class(get_anova_table(modelos[[1]]))
class(modelos[[1]])
class(as.data.frame(modelos[[1]]))
class(modelos)
class(modelos[1])
merge(modelos[[1]], modelos[[2]])
?reduce()
reduce(modelos)
reduce(modelos, full_join)
modelos <- lapply(colnames(data_1[c(5:24)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa")), data_1)})
reduce(modelos, full_join)
anova_results <- reduce(modelos, full_join)
View(anova_results)
anova_results$variable <- colnames(data_1[c(5:24)])
anova_results <- reduce(modelos, full_join) %>%
add_column(.before = 1, variable = colnames(data_1[c(5:24)]))
anova_results <- reduce(modelos, full_join) %>%
add_column(.before = 1, variable = colnames(data_1[c(5:24)])) %>%
adjust_pvalue(p.col = p, method = "BH")
anova_results <- reduce(modelos, full_join) %>%
add_column(.before = 1, variable = colnames(data_1[c(5:24)])) %>%
adjust_pvalue(method = "BH")
View(anova_results)
1.00e-02
(anova_results <- reduce(modelos, full_join) %>%
add_column(.before = 1, variable = colnames(data_1[c(5:24)])) %>%
adjust_pvalue(method = "BH"))
modelos_levene <- lapply(colnames(data_1[c(5:24)]), function(x){
LEVENE_test(formula = as.formula(paste0(x, " ~ playa")), data_1)})
modelos_levene <- lapply(colnames(data_1[c(5:24)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa")), data_1)})
(levene_results <- reduce(modelos, full_join) %>%
add_column(.before = 1, variable = colnames(data_1[c(5:24)]))
)
# Test de Levene se puede computar igual
modelos_levene <- lapply(colnames(data_1[c(5:24)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa")), data_1)})
modelos_levene
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1[c(5:24)])) %>%
adjust_pvalue(method = "BH"))
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1[c(5:24)])))
mshapiro_test(data_1[5:24])
mshapiro_test(data_1[c(5:24)])
modelos_levene <- lapply(data_1[c(5:24)], function(x){
shapiro_test(x, data_1)})
View(modelos_levene)
modelos_shapiro <- lapply(data_1[c(5:24)], function(x){
shapiro_test(x, data_1)})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, variable = colnames(data_1[c(5:24)])))
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1[c(5:24)])))
