data_1 <- filter(datos, corte != "dissected", tiempo != 1)
ggplot(data_1, aes(y = G6PDH_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~cultivo)
# Deteccion de outliers en SOD_t y CAT_t para normalidad de residuos
view(data_1 %>%
group_by(cultivo:playa) %>%
identify_outliers(G6PDH_p))
# Se eliminan:
data_1$GR_t[9]  <- NA # Outlier no extremo, pero afecta a la normalidad de la variable
data_1$MDA_t[1]  <- NA # El que mas se desvia en el qqplot
data_1$Fbasica_p[11]  <- NA # Outlier extremo y afecta a normalidad
data_1$Fbasica_t[5]  <- NA # Outlier extremo y afecta a normalidad
data_1$Fbasica_t[9]  <- NA # Outlier extremo y afecta a normalidad
data_1$Lisozima_p[1]  <- NA # Outlier extremo y afecta a normalidad
data_1$G6PDH_p[7] # La grafica de residuos vs ajustados los marca
data_1$G6PDH_p[9] # La grafica de residuos vs ajustados los marca
# Ajuste de modelos ANOVA con rstatix
modelos <- lapply(colnames(data_1[c(5:31)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa * cultivo")), data_1)})
(anova_results <- reduce(modelos, full_join) %>%
add_column(.before = 1, variable = rep(colnames(data_1[c(5:31)]), each = 3)) %>%
adjust_pvalue(method = "BH"))
# Test de Levenese computa exactamente igual
modelos_levene <- lapply(colnames(data_1[c(5:31)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa * cultivo")), data_1)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1[c(5:31)])))
modelos_lm <- lapply(colnames(data_1[c(5:31)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * cultivo")), data_1)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1[c(5:31)])))
View(levene_results)
# Ajuste de modelos ANOVA con rstatix
modelos <- lapply(colnames(data_1[c(5:31)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa * cultivo")), data_1)})
(anova_results <- reduce(modelos, full_join) %>%
add_column(.before = 1, variable = rep(colnames(data_1[c(5:31)]), each = 3)) %>%
adjust_pvalue(method = "BH"))
# Test de Levenese computa exactamente igual
modelos_levene <- lapply(colnames(data_1[c(5:31)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa * cultivo")), data_1)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1[c(5:31)])))
modelos_lm <- lapply(colnames(data_1[c(5:31)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * cultivo")), data_1)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1[c(5:31)])))
View(anova_results)
View(anova_results %>% filter(p.adj <= 0.05))
View(anova_results %>% as.tibble() %>% filter(p.adj <= 0.05))
View(anova_results %>% as_tibble() %>% filter(p.adj <= 0.05))
write.csv2(anova_results %>% as_tibble() %>% filter(p.adj <= 0.05), file = "Resultados 2x3.csv")
data_1.2 <- filter(datos, corte != "dissected")
View(data_1.2)
data_1.2 <- filter(datos, corte != "dissected") %>%
mutate(tratamiento = case_when(cultivo == "wild" ~ "wild",
cultivo != "wild" & tiempo == 0 ~ "t0",
cultivo != "wild" & tiempo == 1 ~ "t1"))
View(data_1.2)
data_1.2 <- filter(datos, corte != "dissected") %>%
mutate(tratamiento = case_when(cultivo == "wild" ~ "wild",
cultivo != "wild" & tiempo == 0 ~ "t0",
cultivo != "wild" & tiempo == 1 ~ "t1")) %>%
select(-cultivo, -tiempo, -corte) %>% relocate(tratamiento, .after = playa)
# Exploracion
ggplot(data_1.2, aes(y = SOD_t)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
data_1.2$tratamiento <- factor(data_1.2$tratamiento, levels = c("t0", "t1", "wild")) # Reordenar niveles
# Exploracion
ggplot(data_1.2, aes(y = SOD_t)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
data_1.2$tratamiento <- factor(data_1.2$tratamiento, levels = c("wild", "t0", "t1")) # Reordenar niveles
# Exploracion
ggplot(data_1.2, aes(y = SOD_t)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
# Ajuste de modelos ANOVA con rstatix
modelos <- lapply(colnames(data_1.2[c(4:30)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa * cultivo")), data_1.2)})
# Ajuste de modelos ANOVA con rstatix
modelos <- lapply(colnames(data_1.2[c(4:30)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
(anova_results <- reduce(modelos, full_join) %>%
add_column(.before = 1, variable = rep(colnames(data_1.2[c(4:30)]), each = 3)) %>%
adjust_pvalue(method = "BH"))
# Test de Levene
modelos_levene <- lapply(colnames(data_1.2[c(4:30)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1.2[c(4:30)])))
modelos_lm <- lapply(colnames(data_1.2[c(4:30)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1.2[c(4:30)])))
View(levene_results)
View(shapiro_results)
# Exploracion
ggplot(data_1.2, aes(y = Fbasica_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
data_1$Fbasica_p[11]  <- NA # Outlier extremo y afecta a normalidad
# Exploracion y outliers
ggplot(data_1.2, aes(y = Fbasica_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
### PRUEBA 2: 3X3 ----
# Filtrado de datos
data_1.2 <- filter(datos, corte != "dissected") %>%
mutate(tratamiento = case_when(cultivo == "wild" ~ "wild",
cultivo != "wild" & tiempo == 0 ~ "t0",
cultivo != "wild" & tiempo == 1 ~ "t1")) %>%
select(-cultivo, -tiempo, -corte) %>% relocate(tratamiento, .after = playa)
data_1.2$tratamiento <- factor(data_1.2$tratamiento, levels = c("wild", "t0", "t1")) # Reordenar niveles
data_1.2$Fbasica_p[11]  <- NA # Outlier extremo y afecta a normalidad
# Exploracion y outliers
ggplot(data_1.2, aes(y = Fbasica_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
modelos_lm <- lapply(colnames(data_1.2[c(4:30)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1.2[c(4:30)])))
View(shapiro_results)
# Exploracion y outliers
ggplot(data_1.2, aes(y = Lisozima_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
data_1.2$Lisozima_p[1]  <- NA # Outlier extremo y afecta a normalidad
# Exploracion y outliers
ggplot(data_1.2, aes(y = Lisozima_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
modelos_lm <- lapply(colnames(data_1.2[c(4:30)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1.2[c(4:30)])))
View(shapiro_results)
# Exploracion y outliers
ggplot(data_1.2, aes(y = Fbasica_t)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
data_1.2$Fbasica_t[5]  <- NA # Outlier extremo y afecta a normalidad
data_1.2$Fbasica_t[9]  <- NA # Outlier extremo y afecta a normalidad
modelos_lm <- lapply(colnames(data_1.2[c(4:30)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1.2[c(4:30)])))
View(shapiro_results)
# Exploracion y outliers
ggplot(data_1.2, aes(y = SOD_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
View(shapiro_results)
view(data_1.2 %>%
group_by(tratamiento:playa) %>%
identify_outliers(SOD_p))
view(data_1.2 %>%
identify_outliers(SOD_p))
data_1.2$SOD_p[1] <-  NA # Posible outlier
# Exploracion y outliers
ggplot(data_1.2, aes(y = SOD_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
modelos_lm <- lapply(colnames(data_1.2[c(4:30)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1.2[c(4:30)])))
View(shapiro_results)
# Exploracion y outliers
ggplot(data_1.2, aes(y = G6PDH_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
view(data_1.2 %>%
group_by(tratamiento:playa) %>%
identify_outliers(G6PDH_p))
data_1.2$G6PDH_p[7] <- NA # Segun grafica de residuos vs ajustados
data_1.2$G6PDH_p[9] <- NA # Segun grafica de residuos vs ajustados
# Exploracion y outliers
ggplot(data_1.2, aes(y = G6PDH_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
# Test de Levene
modelos_levene <- lapply(colnames(data_1.2[c(4:30)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1.2[c(4:30)])))
modelos_lm <- lapply(colnames(data_1.2[c(4:30)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1.2[c(4:30)])))
View(levene_results)
View(shapiro_results)
view(data_1.2 %>%
#group_by(tratamiento:playa) %>%
identify_outliers(G6PDH_p))
### PRUEBA 2: 3X3 ----
# Filtrado de datos
data_1.2 <- filter(datos, corte != "dissected") %>%
mutate(tratamiento = case_when(cultivo == "wild" ~ "wild",
cultivo != "wild" & tiempo == 0 ~ "t0",
cultivo != "wild" & tiempo == 1 ~ "t1")) %>%
select(-cultivo, -tiempo, -corte) %>% relocate(tratamiento, .after = playa)
data_1.2$tratamiento <- factor(data_1.2$tratamiento, levels = c("wild", "t0", "t1")) # Reordenar niveles
# Exploracion y outliers
ggplot(data_1.2, aes(y = G6PDH_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
view(data_1.2 %>%
#group_by(tratamiento:playa) %>%
identify_outliers(G6PDH_p))
data_1.2$G6PDH_p[6] <- NA # Segun grafica de residuos vs ajustados
# Test de Levene
modelos_levene <- lapply(colnames(data_1.2[c(4:30)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1.2[c(4:30)])))
modelos_lm <- lapply(colnames(data_1.2[c(4:30)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1.2[c(4:30)])))
View(shapiro_results)
View(levene_results)
View(shapiro_results)
modelos_lm[[14]]
plot(modelos_lm[[14]])
# Filtrado de datos
data_1.2 <- filter(datos, corte != "dissected") %>%
mutate(tratamiento = case_when(cultivo == "wild" ~ "wild",
cultivo != "wild" & tiempo == 0 ~ "t0",
cultivo != "wild" & tiempo == 1 ~ "t1")) %>%
select(-cultivo, -tiempo, -corte) %>% relocate(tratamiento, .after = playa)
data_1.2$tratamiento <- factor(data_1.2$tratamiento, levels = c("wild", "t0", "t1")) # Reordenar niveles
# Exploracion y outliers
ggplot(data_1.2, aes(y = G6PDH_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
# Eliminar valores extremos e influyentes
data_1.2$Fbasica_p[11]  <- NA # Outlier extremo y afecta a normalidad
data_1.2$Lisozima_p[1]  <- NA # Outlier extremo y afecta a normalidad
data_1.2$Fbasica_t[5]  <- NA # Outlier extremo y afecta a normalidad
data_1.2$Fbasica_t[9]  <- NA # Outlier extremo y afecta a normalidad
data_1.2$SOD_p[1] <-  NA # Posible outlier, afecta a normalidad
data_1.2$G6PDH_p[4] <- NA # Afecta a normalidad de residuos
data_1.2$G6PDH_p[7] <- NA # Afecta a normalidad de residuos
# Test de Levene
modelos_levene <- lapply(colnames(data_1.2[c(4:30)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1.2[c(4:30)])))
modelos_lm <- lapply(colnames(data_1.2[c(4:30)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1.2[c(4:30)])))
View(shapiro_results)
View(modelos_levene)
View(levene_results)
data_1.2 <- filter(datos, corte != "dissected") %>%
mutate(tratamiento = case_when(cultivo == "wild" ~ "wild",
cultivo != "wild" & tiempo == 0 ~ "t0",
cultivo != "wild" & tiempo == 1 ~ "t1")) %>%
select(-cultivo, -tiempo, -corte) %>% relocate(tratamiento, .after = playa)
data_1.2$tratamiento <- factor(data_1.2$tratamiento, levels = c("wild", "t0", "t1")) # Reordenar niveles
# Exploracion y outliers
ggplot(data_1.2, aes(y = G6PDH_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
view(data_1.2 %>%
#group_by(tratamiento:playa) %>%
identify_outliers(G6PDH_p))
# Graficas de diagnostico
plot(modelos_lm[[14]])
data_1.2$Fbasica_t[5]  <- NA # Outlier extremo y afecta a normalidad
data_1.2$Fbasica_t[9]  <- NA # Outlier extremo y afecta a normalidad
data_1.2$SOD_p[1] <-  NA # Posible outlier, afecta a normalidad
data_1.2$G6PDH_p[9] <- NA # Afecta a normalidad de residuos
data_1.2$G6PDH_p[7] <- NA # Afecta a normalidad de residuos
# Ajuste de modelos ANOVA con rstatix
modelos <- lapply(colnames(data_1.2[c(4:30)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
(anova_results <- reduce(modelos, full_join) %>%
add_column(.before = 1, variable = rep(colnames(data_1.2[c(4:30)]), each = 3)) %>%
adjust_pvalue(method = "BH"))
# Test de Levene
modelos_levene <- lapply(colnames(data_1.2[c(4:30)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1.2[c(4:30)])))
# Test de Shapiro-Wilks
modelos_lm <- lapply(colnames(data_1.2[c(4:30)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1.2[c(4:30)])))
View(shapiro_results)
View(modelos_levene)
View(levene_results)
# Graficas de diagnostico
plot(modelos_lm[[14]])
modelos_levene <- lapply(colnames(data_1.2[c(4:30)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1.2[c(4:30)])))
modelos_lm <- lapply(colnames(data_1.2[c(4:30)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1.2[c(4:30)])))
View(shapiro_results)
View(levene_results)
# Exploracion y outliers
ggplot(data_1.2, aes(y = G6PDH_t)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
view(data_1.2 %>%
#group_by(tratamiento:playa) %>%
identify_outliers(G6PDH_t))
data_1.2$G6PDH_p[7] <- NA # Segun grafica de residuos vs ajustados
data_1.2$G6PDH_p[9] <- NA # Segun grafica de residuos vs ajustados
# Test de Levenese computa exactamente igual
modelos_levene <- lapply(colnames(data_1[c(5:31)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa * cultivo")), data_1)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1[c(5:31)])))
modelos_lm <- lapply(colnames(data_1[c(5:31)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * cultivo")), data_1)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1[c(5:31)])))
View(shapiro_results)
View(levene_results)
# Exploracion y outliers
ggplot(data_1.2, aes(y = G6PDH_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
# Graficas de diagnostico
plot(modelos_lm[[14]])
data_1.2$Fbasica_t[9]  <- NA # Outlier extremo y afecta a normalidad
data_1.2$SOD_p[1] <-  NA # Posible outlier, afecta a normalidad
data_1.2$G6PDH_p[9] <- NA # Afecta a homocedasticidad
data_1.2$G6PDH_p[7] <- NA # Afecta a homocedasticidad
data_1.2$G6PDH_p[4] <- NA # Afecta a homocedasticidad
# Exploracion y outliers
ggplot(data_1.2, aes(y = G6PDH_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
# Test de Levene
modelos_levene <- lapply(colnames(data_1.2[c(4:30)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1.2[c(4:30)])))
View(levene_results)
data_1.2$G6PDH_t[12] <- NA # Segun grafica de residuos vs ajustados
# Exploracion y outliers
ggplot(data_1.2, aes(y = G6PDH_t)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
# Test de Levene
modelos_levene <- lapply(colnames(data_1.2[c(4:30)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1.2[c(4:30)])))
modelos_lm <- lapply(colnames(data_1.2[c(4:30)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1.2[c(4:30)])))
View(shapiro_results)
# Exploracion y outliers
ggplot(data_1.2, aes(y = G6PDH_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~tratamiento)
view(data_1.2 %>%
#group_by(tratamiento:playa) %>%
identify_outliers(G6PDH_p))
# Ajuste de modelos ANOVA con rstatix
modelos <- lapply(colnames(data_1.2[c(4:30)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
(anova_results <- reduce(modelos, full_join) %>%
add_column(.before = 1, variable = rep(colnames(data_1.2[c(4:30)]), each = 3)) %>%
adjust_pvalue(method = "BH"))
# Test de Levene
modelos_levene <- lapply(colnames(data_1.2[c(4:30)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_1.2[c(4:30)])))
modelos_lm <- lapply(colnames(data_1.2[c(4:30)]), function(x){
lm(formula = as.formula(paste0(x, " ~ playa * tratamiento")), data_1.2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_1.2[c(4:30)])))
View(anova_results)
# Exploracion y outliers
ggplot(data_1.2, aes(y = G6PDH_p)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 1, size = 2) +
facet_wrap(~playa)
# Exploracion y outliers
ggplot(data_1.2, aes(y = CAT_t)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 1, size = 2) +
facet_wrap(~playa)
# Exploracion y outliers
ggplot(data_1.2, aes(y = GST_t)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 1, size = 2) +
facet_wrap(~playa)
# Exploracion y outliers
ggplot(data_1.2, aes(y = Fbasica_t)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 1, size = 2) +
facet_wrap(~playa)
# Exploracion y outliers
ggplot(data_1.2, aes(y = DTD_t)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 1, size = 2) +
facet_wrap(~playa)
# Exploracion y outliers
ggplot(data_1.2, aes(y = GR_p
)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 1, size = 2) +
facet_wrap(~playa)
# Exploracion y outliers
ggplot(data_1.2, aes(y = MDA_t)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 1, size = 2) +
facet_wrap(~playa)
ggplot(data_1, aes(y = G6PDH_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~cultivo)
# Filtrar: solo anemonas cultivadas
data_1 <- filter(datos, corte != "dissected", tiempo != 1)
data_1$GR_t[9]  <- NA # Outlier no extremo, pero afecta a la normalidad de la variable
data_1$MDA_t[1]  <- NA # El que mas se desvia en el qqplot
data_1$Fbasica_p[11]  <- NA # Outlier extremo y afecta a normalidad
data_1$Fbasica_t[5]  <- NA # Outlier extremo y afecta a normalidad
data_1$Fbasica_t[9]  <- NA # Outlier extremo y afecta a normalidad
data_1$Lisozima_p[1]  <- NA # Outlier extremo y afecta a normalidad
data_1$G6PDH_p[7] <- NA # Segun grafica de residuos vs ajustados
data_1$G6PDH_p[9] <- NA # Segun grafica de residuos vs ajustados
ggplot(data_1, aes(y = GR_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~cultivo)
ggplot(data_1, aes(y = GST_t)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~cultivo)
ggplot(data_1, aes(y = GST_p)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~cultivo)
ggplot(data_1, aes(y = MDA_t)) +
geom_boxplot(aes(x = playa, color = playa), alpha = 0) +
geom_point(aes(x = playa, color = playa), alpha = 1, size = 2) +
facet_wrap(~cultivo)
# Exploracion y outliers
ggplot(data_1.2, aes(y = MDA_t)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 1, size = 2) +
facet_wrap(~playa)
