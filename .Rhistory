rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 3)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
datos$ac2 <- ac2$cluster
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Segun este método, deberiamos escoger 4 clusters
set.seed(99)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(99)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
### SETUP ----
library(tidyverse)
library(multcompView)
library(car)
library(rstatix)
library(tidyverse)
library(multcompView)
library(car)
library(rstatix)
library(ggpubr)
library(ggthemr)
install.packages("ggthemr")
devtools::install_github('Mikata-Project/ggthemr')
library(devtools)
install.packages("devtools")
devtools::install_github('Mikata-Project/ggthemr')
install.packages("gt")
install.packages("patchwork")
library(tidyverse)
library(rstatix)
library(ggpubr)
library(patchwork)
### SETUP ---
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
source(file = "./scripts septiembre 2024-2025/0_data_lab.R")
#source(file = "./scripts septiembre 2024-2025/0_data_laptop.R")
data_2 <- filter(datos, cultivo == "cultured")
View(data_2)
View(datos_long)
data2$section:data2$time
data_2$section:data_2$time
data_2$time:data_2$section
data_2$time*data_2$section
data_2 <- filter(datos_long, cultivo == "cultured") %>%
mutate(grupo = time:section)
data_2 <- filter(datos_long, cultivo == "Si") %>%
mutate(grupo = time:section)
ggboxplot(data2, x = "grupo", y = "SOD", color = "grupo", fill = "grupo", alpha = 0.2, add = "jitter")
ggboxplot(data_2, x = "grupo", y = "SOD", color = "grupo", fill = "grupo", alpha = 0.2, add = "jitter")
ggboxplot(data_2, x = "grupo", y = "SOD", color = "grupo", fill = "grupo", alpha = 0.2, add = "jitter", facet.by = "tejido")
ggboxplot(data_2, x = "grupo", y = "SOD", color = "grupo", fill = "grupo", alpha = 0.2, add = "jitter", facet.by = "tejido") + theme_pubr()
ggboxplot(data_2, x = "grupo", y = "SOD", color = "grupo", fill = "grupo", alpha = 0.2, add = "jitter", facet.by = "tejido") + theme_pubclean()
ggboxplot(data_2, x = "grupo", y = "SOD", color = "grupo", fill = "grupo", alpha = 0.1, add = "jitter", facet.by = "tejido") + theme_pubclean()
ggboxplot(data_2, x = "grupo", y = "CAT", color = "grupo", fill = "grupo", alpha = 0.1, add = "jitter", facet.by = "tejido") + theme_pubclean()
data_2 <- filter(datos_long, cultivo == "Si") %>%
mutate(grupo = time:section)
View(datos_long)
# Filtrar: solo anemonas cultivadas
data_2 <- filter(datos, cultivo == "cultured")
View(data_2)
data_2$GPx_t[9]
data <- filter(datos_long, cultivo == "Si") %>%
mutate(grupo = time:section)
View(data)
data$GPx[9] <- NA # Afecta a homcedasticidad y es extremo
data$GPx[6] <- NA #HOMOCEDASTICIDAD
data$GPx[2] <- NA
data$GPx[33] <- NA #posible
data$GPx[4] <- NA # Quitar el otro dato  #4 para l GPx tentacular
data_2$GPx_p[2]
data$GPx[38]
15+36
36+17
data$GPx[38] <- NA # outlier extremo
data$GPx[51] <- NA # extremo
data$GPx[53] <- NA
data$GPx[66] <- NA
data$GPx[69] <- NA
data_2$SOD_t[7]
data$SOD[7]
# Se eliminan:
data$SOD[7] <- NA #para normalidad
data$SOD[3] <- NA #para normalidad
data$CAT[35] <- NA # La funcion ha identificado otro, pero su eliminacion no afecta a la normalidad de residuos, este si.
data$Mielo[18] <- NA #Sospechoso, y afecta a normalidad
26+36
data$Mielo[62] <- NA
data$Facida[66] # sospechoso, outlier no extremo
36+11
15+36
data$Fbasica[48] <- NA # outlier extremo
data$Fbasica[51] # incrementa mucho error pero no se puede quitar porque violaria homocedasticidad
33+36
29+36
data <- filter(datos_long, cultivo == "Si") %>%
mutate(grupo = time:section)
data$GPx[9] <- NA # Afecta a homcedasticidad y es extremo
data$GPx[6] <- NA #HOMOCEDASTICIDAD
data$GPx[2] <- NA
data$GPx[33] <- NA #posible
data$GPx[4] <- NA # Quitar el otro dato  #4 para l GPx tentacular
data$GPx[38] <- NA # outlier extremo
data$GPx[51] <- NA # extremo
data$GPx[53] <- NA
data$GPx[66] <- NA
data$GPx[69] <- NA
# Se eliminan:
data$SOD[7] <- NA #para normalidad
data$SOD[3] <- NA #para normalidad
# Quitar la  #35 tambien
data$CAT[35] <- NA # La funcion ha identificado otro, pero su eliminacion no afecta a la normalidad de residuos, este si.
data$Mielo[62] <- NA
data$Mielo[18] <- NA #Sospechoso, y afecta a normalidad
data$Facida[66] # sospechoso, outlier no extremo
data$Fbasica[48] <- NA # outlier extremo
data$Fbasica[51] # incrementa mucho error pero no se puede quitar porque violaria homocedasticidad
data$Fbasica[9] <- NA # Afecta a homocedasticidad
data$Lisozima[69] <- NA # outlier extremo
data$Lisozima[70] <- NA # outlier extremo
data$Lisozima[38] <- NA # outlier extremo
data$MDA[65] <- NA # Outlier no extremo pero parece que puede afectar al resultado del analisis y afecta a la varianza del grupo.
### Modelo de gráfica ----
ggboxplot(data_2, x = "grupo", y = "CAT", color = "grupo", fill = "grupo", alpha = 0.1, add = "jitter", facet.by = "tejido") + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "grupo", fill = "grupo", alpha = 0.1, add = "jitter", facet.by = "tejido") + theme_pubclean()
?ggboxplot
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "grupo", fill = "grupo", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "jco") + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "jco") + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "lancet") + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "ucscgb") + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "uchicago") + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "npg") + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "aaas") + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "npg") + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "RdBu") + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "npg") + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "npg", ylab = "U/mg protein") + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = c("Column", "Tentacle")) + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(c("Column", "Tentacle"))) + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) + theme_pubclean()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = "jitter", facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")), notch = T) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(c(shape = 16, shape = 14)), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 16), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 6), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 12), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 9), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 8), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 7), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 5), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 4), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 3), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 2), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")) ) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")), size = 1.5) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1, size = 1.5), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(c(shape = 1, size = 1), c(size = 2)), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1, shape = 2), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(size = 1, shape = 5), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) + theme_pubr()
### Modelo de gráfica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")))
### Modelo de grafica ----
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = "npg", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")))
ggpubr::get_palette("npg", 4)
ggpubr::get_palette("npg", 8)
ggpubr::get_palette("RdBu", 8)
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#4DBBD5FF","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")))
get_palette("npg", 15)
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#37B3BE","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")))
get_palette("RdBu", 4)
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")))
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")))
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")))
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_bw()
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_classic()
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_classic2()
ggboxplot(data, x = "grupo", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_cleveland()
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_cleveland() +
theme(legen)
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_cleveland()
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.9, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_cleveland()
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.4, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_cleveland()
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_cleveland()
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_transparent()
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test()
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs_pubr()
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs_pubr() +
guides(linetype = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9, face = "bold.italic"))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Female", "Male")) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", palette = c("#0571B0","#E64B35FF"), ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "group", fill = "section", alpha = 0.1, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_color_manual(values = c("#92C5DE","#0571B0","#E64B35FF","#CA0020"), labels = c("Control T1", "Control T2", "Sectioned T1", "Sectioned T2")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_color_manual(values = c("#92C5DE","#0571B0","#E64B35FF","#CA0020"), labels = c("Control T1", "Control T2", "Sectioned T1", "Sectioned T2")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.1, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.2, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
scale_fill_manual(values = c("#0571B0","#E64B35FF") +
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.2, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.2, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
?labs
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9),
legen)
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ #labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none")
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_pubr() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_pubclean() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_cleveland() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "section", fill = "section", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#0571B0","#E64B35FF"), labels = c("Control", "Sectioned")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "group", fill = "group", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#92C5DE","#0571B0","#E64B35FF","#CA0020")) +
scale_color_manual(values = c("#92C5DE","#0571B0","#E64B35FF","#CA0020"), labels = c("Control", "Sectioned" "T21", "RT2")) + guides(fill = "none") +
ggboxplot(data, x = "time", y = "CAT", color = "group", fill = "group", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#92C5DE","#0571B0","#E64B35FF","#CA0020")) +
scale_color_manual(values = c("#92C5DE","#0571B0","#E64B35FF","#CA0020"), labels = c("Control", "Sectioned","T21", "RT2")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
View(data)
rlang::last_trace()
ggboxplot(data, x = "time", y = "CAT", color = "group", fill = "group", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle")))
ggboxplot(data, x = "time", y = "CAT", color = "grupo", fill = "grupo", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#92C5DE","#0571B0","#E64B35FF","#CA0020")) +
scale_color_manual(values = c("#92C5DE","#0571B0","#E64B35FF","#CA0020"), labels = c("Control", "Sectioned","T21", "RT2")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
get_palette("RdBu", 16)
ggboxplot(data, x = "time", y = "CAT", color = "grupo", fill = "grupo", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#77B4D5","#0571B0","#D6604D","#E64B35FF")) +
scale_color_manual(values = c("#77B4D5","#0571B0","#D6604D","#E64B35FF"), labels = c("Control", "Sectioned","T21", "RT2")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ç
get_palette("npg", 16)
ggboxplot(data, x = "time", y = "CAT", color = "grupo", fill = "grupo", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#3DB5C5","#0571B0","#D6604D","#E64B35FF")) +
scale_color_manual(values = c("#3DB5C5","#0571B0","#D6604D","#E64B35FF"), labels = c("Control", "Sectioned","T21", "RT2")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "grupo", fill = "grupo", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#12A3F8","#0571B0","#D6604D","#E64B35FF")) +
scale_color_manual(values = c("#12A3F8","#0571B0","#D6604D","#E64B35FF"), labels = c("Control", "Sectioned","T21", "RT2")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "grupo", fill = "grupo", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#12A3F8","#D6604D","#0571B0","#E64B35FF")) +
scale_color_manual(values = c("#12A3F8","#D6604D","#0571B0","#E64B35FF"), labels = c("Control T1", "Sectioned T1","Control T2", "Sectioned T2")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
ggboxplot(data, x = "time", y = "CAT", color = "grupo", fill = "grupo", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#12A3F8","#E64B35FF","#0571B0","#BE2F36")) +
scale_color_manual(values = c("#12A3F8","#E64B35FF","#0571B0","#BE2F36"), labels = c("Control T1", "Sectioned T1","Control T2", "Sectioned T2")) + guides(fill = "none") +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
?doo()
