geom_text(data = tabla_summ, aes(x = `corte:tiempo`, y = media + error, label = tukey), color = "grey5", vjust = -0.8, size = 3.5, fontface = "bold") +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Treatment") + # Omitir?
#scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
# scale_x_discrete(labels = c('C','LS','BW', "IMTA")) + #cambiar al apropiado
ylim(c(0, 1.4*(max(tabla_summ$media) + max(tabla_summ$error)))) #+
#theme_tfm()
}
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
ggthemr()
ggthemr('flat')
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
ggthemr('dust')
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
ggthemr('grape')
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
ggthemr('light')
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
orden <- c("control:0, dissected:0, control:1, dissected:1")
barras_tfg <- function(){
ggplot() +
geom_errorbar(data = tabla_summ, aes(x = factor(`corte:tiempo`, orden), ymax = media + error, ymin = media- error), width = 0.7, color = "gray55") +
geom_col(data = tabla_summ, aes(x = factor(`corte:tiempo`, orden), y = media, fill = `corte:tiempo`, color = `corte:tiempo`),  alpha = 0.1, linewidth = 1) +
geom_text(data = tabla_summ, aes(x = factor(`corte:tiempo`, orden), y = media + error, label = tukey), color = "grey5", vjust = -0.8, size = 3.5, fontface = "bold") +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Treatment") + # Omitir?
#scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
# scale_x_discrete(labels = c('C','LS','BW', "IMTA")) + #cambiar al apropiado
ylim(c(0, 1.4*(max(tabla_summ$media) + max(tabla_summ$error)))) #+
#theme_tfm()
}
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
barras_tfg <- function(){
ggplot() +
geom_errorbar(data = tabla_summ, aes(x = factor(`corte:tiempo`, orden), ymax = media + error, ymin = media- error), width = 0.7, color = "gray55") +
geom_col(data = tabla_summ, aes(x = factor(`corte:tiempo`, orden), y = media, fill = factor(`corte:tiempo`, orden), color = factor(`corte:tiempo`, orden)),  alpha = 0.1, linewidth = 1) +
geom_text(data = tabla_summ, aes(x = factor(`corte:tiempo`, orden), y = media + error, label = tukey), color = "grey5", vjust = -0.8, size = 3.5, fontface = "bold") +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Treatment") + # Omitir?
#scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
# scale_x_discrete(labels = c('C','LS','BW', "IMTA")) + #cambiar al apropiado
ylim(c(0, 1.4*(max(tabla_summ$media) + max(tabla_summ$error)))) #+
#theme_tfm()
}
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
tabla_summ$`corte:tiempo` <- factor(tabla_summ$`corte:tiempo`, levels = c("control:0, dissected:0, control:1, dissected:1"))
i <- colnames(data_2[5:24])[[n]]
tabla_summ <- data_2 %>%  group_by(corte:tiempo) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if (((p_valor_adjust[j]) <= .05)|((p_valor_adjust[j+1]) <= .05)|((p_valor_adjust[j+2]) <= .05)) {
tukey_loop <- TukeyHSD(modelos[[n]])
cld.tukey <- multcompLetters4(modelos[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`corte:tiempo`$Letters)))
colnames(letras) <- c("corte:tiempo", "tukey")
tabla_summ <- merge(tabla_summ, letras)
tabla_summ$`corte:tiempo` <- factor(tabla_summ$`corte:tiempo`, levels = c("control:0", "dissected:0", "control:1", "dissected:1"))
} else {
tabla_summ$tukey <- c("", "", "", "")
}
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
barras_tfg <- function(){
ggplot() +
geom_errorbar(data = tabla_summ, aes(x = `corte:tiempo`, ymax = media + error, ymin = media- error), width = 0.7, color = "gray55") +
geom_col(data = tabla_summ, aes(x = `corte:tiempo`, y = media, fill = `corte:tiempo`, color = `corte:tiempo`),  alpha = 0.1, linewidth = 1) +
geom_text(data = tabla_summ, aes(x = `corte:tiempo`, y = media + error, label = tukey), color = "grey5", vjust = -0.8, size = 3.5, fontface = "bold") +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Treatment") + # Omitir?
#scale_color_manual(values = c("#0c8890", "#54B65D","#E56A1C", "#FBBC4C")) +
# scale_x_discrete(labels = c('C','LS','BW', "IMTA")) + #cambiar al apropiado
ylim(c(0, 1.4*(max(tabla_summ$media) + max(tabla_summ$error)))) #+
#theme_tfm()
}
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
swatch()
swatch()[4]
swatch()[2:&]
swatch()[2:6]
swatch()[2:6]
swatch()[2:6][-3]
barras_tfg <- function(){
ggplot() +
geom_errorbar(data = tabla_summ, aes(x = `corte:tiempo`, ymax = media + error, ymin = media- error), width = 0.7, color = "gray55") +
geom_col(data = tabla_summ, aes(x = `corte:tiempo`, y = media, fill = `corte:tiempo`, color = `corte:tiempo`),  alpha = 0.1, linewidth = 1) +
geom_text(data = tabla_summ, aes(x = `corte:tiempo`, y = media + error, label = tukey), color = "grey5", vjust = -0.8, size = 3.5, fontface = "bold") +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Treatment") + # Omitir?
scale_color_manual(values = swatch()[2:6][-3]) +
# scale_x_discrete(labels = c('C','LS','BW', "IMTA")) + #cambiar al apropiado
ylim(c(0, 1.4*(max(tabla_summ$media) + max(tabla_summ$error)))) #+
#theme_tfm()
}
barras_tfg <- function(){
ggplot() +
geom_errorbar(data = tabla_summ, aes(x = `corte:tiempo`, ymax = media + error, ymin = media- error), width = 0.7, color = "gray55") +
geom_col(data = tabla_summ, aes(x = `corte:tiempo`, y = media, fill = `corte:tiempo`, color = `corte:tiempo`),  alpha = 0.1, linewidth = 1) +
geom_text(data = tabla_summ, aes(x = `corte:tiempo`, y = media + error, label = tukey), color = "grey5", vjust = -0.8, size = 3.5, fontface = "bold") +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Treatment") + # Omitir?
scale_color_manual(values = swatch()[2:6][-3]) +
# scale_x_discrete(labels = c('C','LS','BW', "IMTA")) + #cambiar al apropiado
ylim(c(0, 1.4*(max(tabla_summ$media) + max(tabla_summ$error)))) #+
#theme_tfm()
}
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
swatch()[2:6][-3]
swatch()
ggplot() +
geom_errorbar(data = tabla_summ, aes(x = `corte:tiempo`, ymax = media + error, ymin = media- error), width = 0.7, color = "gray55") +
geom_col(data = tabla_summ, aes(x = `corte:tiempo`, y = media, fill = `corte:tiempo`, color = `corte:tiempo`),  alpha = 0.1, linewidth = 1) +
geom_text(data = tabla_summ, aes(x = `corte:tiempo`, y = media + error, label = tukey), color = "grey5", vjust = -0.8, size = 3.5, fontface = "bold") +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Treatment") + # Omitir?
scale_color_manual(values = swatch()[2:5] +
# scale_x_discrete(labels = c('C','LS','BW', "IMTA")) + #cambiar al apropiado
ylim(c(0, 1.4*(max(tabla_summ$media) + max(tabla_summ$error)))) #+
#theme_tfm()
}
barras_tfg <- function(){
ggplot() +
geom_errorbar(data = tabla_summ, aes(x = `corte:tiempo`, ymax = media + error, ymin = media- error), width = 0.7, color = "gray55") +
geom_col(data = tabla_summ, aes(x = `corte:tiempo`, y = media, fill = `corte:tiempo`, color = `corte:tiempo`),  alpha = 0.1, linewidth = 1) +
geom_text(data = tabla_summ, aes(x = `corte:tiempo`, y = media + error, label = tukey), color = "grey5", vjust = -0.8, size = 3.5, fontface = "bold") +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Treatment") + # Omitir?
scale_color_manual(values = swatch()[2:5]) +
# scale_x_discrete(labels = c('C','LS','BW', "IMTA")) + #cambiar al apropiado
ylim(c(0, 1.4*(max(tabla_summ$media) + max(tabla_summ$error)))) #+
#theme_tfm()
}
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
ggplot() +
geom_errorbar(data = tabla_summ, aes(x = `corte:tiempo`, ymax = media + error, ymin = media- error), width = 0.7, color = "gray55") +
geom_col(data = tabla_summ, aes(x = `corte:tiempo`, y = media, color = `corte:tiempo`, fill = `corte:tiempo`), alpha = 0.3) +
geom_text(data = tabla_summ, aes(x = tratamiento, y = media + error, label = tukey), color = "grey5", vjust = -0.8, size = 3.5, fontface = "bold") +
j <- 1
for (n in c(1:20)) {
i <- colnames(data_2[5:24])[[n]]
tabla_summ <- data_2 %>%  group_by(corte:tiempo) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if (((p_valor_adjust[j]) <= .05)|((p_valor_adjust[j+1]) <= .05)|((p_valor_adjust[j+2]) <= .05)) {
tukey_loop <- TukeyHSD(modelos[[n]])
cld.tukey <- multcompLetters4(modelos[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`corte:tiempo`$Letters)))
colnames(letras) <- c("corte:tiempo", "tukey")
tabla_summ <- merge(tabla_summ, letras)
tabla_summ$`corte:tiempo` <- factor(tabla_summ$`corte:tiempo`, levels = c("control:0", "dissected:0", "control:1", "dissected:1"))
} else {
tabla_summ$tukey <- c("", "", "", "")
}
j = j + 3
if (n == 5){j = j -1}
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
saveRDS(p, paste0("./resultados/graficas4/", i, "_RDS"))
ggsave(paste0("./resultados/graficas2025/", i, ".png"), width = 90, height = 112.5, units = "mm", dpi = 1000)
}
ggplot() +
geom_errorbar(data = tabla_summ, aes(x = `corte:tiempo`, ymax = media + error, ymin = media- error), width = 0.7, color = "gray55") +
geom_col(data = tabla_summ, aes(x = `corte:tiempo`, y = media, color = `corte:tiempo`, fill = `corte:tiempo`), alpha = 0.3) +
geom_text(data = tabla_summ, aes(x = tratamiento, y = media + error, label = tukey), color = "grey5", vjust = -0.8, size = 3.5, fontface = "bold") +
j <- 1
for (n in c(1:20)) {
i <- colnames(data_2[5:24])[[n]]
tabla_summ <- data_2 %>%  group_by(corte:tiempo) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if (((p_valor_adjust[j]) <= .05)|((p_valor_adjust[j+1]) <= .05)|((p_valor_adjust[j+2]) <= .05)) {
tukey_loop <- TukeyHSD(modelos[[n]])
cld.tukey <- multcompLetters4(modelos[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`corte:tiempo`$Letters)))
colnames(letras) <- c("corte:tiempo", "tukey")
tabla_summ <- merge(tabla_summ, letras)
tabla_summ$`corte:tiempo` <- factor(tabla_summ$`corte:tiempo`, levels = c("control:0", "dissected:0", "control:1", "dissected:1"))
} else {
tabla_summ$tukey <- c("", "", "", "")
}
j = j + 3
if (n == 5){j = j -1}
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
saveRDS(p, paste0("./resultados/graficas4/", i, "_RDS"))
ggsave(paste0("./resultados/graficas2025/", i, ".png"), width = 90, height = 112.5, units = "mm", dpi = 1000)
}
ggplot() +
geom_errorbar(data = tabla_summ, aes(x = `corte:tiempo`, ymax = media + error, ymin = media- error), width = 0.7, color = "gray55") +
geom_col(data = tabla_summ, aes(x = `corte:tiempo`, y = media, color = `corte:tiempo`, fill = `corte:tiempo`), alpha = 0.3) +
geom_text(data = tabla_summ, aes(x = tratamiento, y = media + error, label = tukey), color = "grey5", vjust = -0.8, size = 3.5, fontface = "bold") +
j <- 1
for (n in c(1:20)) {
i <- colnames(data_2[5:24])[[n]]
tabla_summ <- data_2 %>%  group_by(corte:tiempo) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if (((p_valor_adjust[j]) <= .05)|((p_valor_adjust[j+1]) <= .05)|((p_valor_adjust[j+2]) <= .05)) {
tukey_loop <- TukeyHSD(modelos[[n]])
cld.tukey <- multcompLetters4(modelos[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`corte:tiempo`$Letters)))
colnames(letras) <- c("corte:tiempo", "tukey")
tabla_summ <- merge(tabla_summ, letras)
tabla_summ$`corte:tiempo` <- factor(tabla_summ$`corte:tiempo`, levels = c("control:0", "dissected:0", "control:1", "dissected:1"))
} else {
tabla_summ$tukey <- c("", "", "", "")
}
j = j + 3
if (n == 5){j = j -1}
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
saveRDS(p, paste0("./resultados/graficas2025/", i, "_RDS"))
ggsave(paste0("./resultados/graficas2025/", i, ".png"), width = 90, height = 112.5, units = "mm", dpi = 1000)
}
p_valor_adjust
j <- 1
as.vector(p_valor_adjust)
p_valor_adjust[1:14]
append(p_valor_adjust[1:14], 1)
?append()
append(p_valor_adjust, 1,14)
p_valor_adjust_cor <- append(p_valor_adjust[1:14], 1)
j <- 1
for (n in c(1:20)) {
i <- colnames(data_2[5:24])[[n]]
tabla_summ <- data_2 %>%  group_by(corte:tiempo) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if (((p_valor_adjust_cor[j]) <= .05)|((p_valor_adjust_cor[j+1]) <= .05)|((p_valor_adjust_cor[j+2]) <= .05)) {
tukey_loop <- TukeyHSD(modelos[[n]])
cld.tukey <- multcompLetters4(modelos[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`corte:tiempo`$Letters)))
colnames(letras) <- c("corte:tiempo", "tukey")
tabla_summ <- merge(tabla_summ, letras)
tabla_summ$`corte:tiempo` <- factor(tabla_summ$`corte:tiempo`, levels = c("control:0", "dissected:0", "control:1", "dissected:1"))
} else {
tabla_summ$tukey <- c("", "", "", "")
}
j = j + 3
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
saveRDS(p, paste0("./resultados/graficas2025/", i, "_RDS"))
ggsave(paste0("./resultados/graficas2025/", i, ".png"), width = 90, height = 112.5, units = "mm", dpi = 1000)
}
View(data_2)
n <- 5
i <- colnames(data_2[5:24])[[n]]
tabla_summ <- data_2 %>%  group_by(corte:tiempo) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
j <- 1
for (n in c(1:20)) {
i <- colnames(data_2[5:24])[[n]]
tabla_summ <- data_2 %>%  group_by(corte:tiempo) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if (((p_valor_adjust_cor[j]) <= .05)|((p_valor_adjust_cor[j+1]) <= .05)|((p_valor_adjust_cor[j+2]) <= .05)) {
tukey_loop <- TukeyHSD(modelos[[n]])
cld.tukey <- multcompLetters4(modelos[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`corte:tiempo`$Letters)))
colnames(letras) <- c("corte:tiempo", "tukey")
tabla_summ <- merge(tabla_summ, letras)
tabla_summ$`corte:tiempo` <- factor(tabla_summ$`corte:tiempo`, levels = c("control:0", "dissected:0", "control:1", "dissected:1"))
} else {
tabla_summ$tukey <- c("", "", "", "")
}
j = j + 3
if (n != 5){}
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
saveRDS(p, paste0("./resultados/graficas2025/", i, "_RDS"))
ggsave(paste0("./resultados/graficas2025/", i, ".png"), width = 90, height = 112.5, units = "mm", dpi = 1000)}
j <- 1
n <- 1
i <- colnames(data_2[5:24])[[n]]
tabla_summ <- data_2 %>%  group_by(corte:tiempo) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if (((p_valor_adjust_cor[j]) <= .05)|((p_valor_adjust_cor[j+1]) <= .05)|((p_valor_adjust_cor[j+2]) <= .05)) {
tukey_loop <- TukeyHSD(modelos[[n]])
cld.tukey <- multcompLetters4(modelos[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`corte:tiempo`$Letters)))
colnames(letras) <- c("corte:tiempo", "tukey")
tabla_summ <- merge(tabla_summ, letras)
tabla_summ$`corte:tiempo` <- factor(tabla_summ$`corte:tiempo`, levels = c("control:0", "dissected:0", "control:1", "dissected:1"))
} else {
tabla_summ$tukey <- c("", "", "", "")
}
j = j + 3
if (n != 5){}
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
j <- 1
for (n in c(1:20)) {
i <- colnames(data_2[5:24])[[n]]
tabla_summ <- data_2 %>%  group_by(corte:tiempo) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if (((p_valor_adjust_cor[j]) <= .05)|((p_valor_adjust_cor[j+1]) <= .05)|((p_valor_adjust_cor[j+2]) <= .05)) {
tukey_loop <- TukeyHSD(modelos[[n]])
cld.tukey <- multcompLetters4(modelos[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`corte:tiempo`$Letters)))
colnames(letras) <- c("corte:tiempo", "tukey")
tabla_summ <- merge(tabla_summ, letras)
tabla_summ$`corte:tiempo` <- factor(tabla_summ$`corte:tiempo`, levels = c("control:0", "dissected:0", "control:1", "dissected:1"))
} else {
tabla_summ$tukey <- c("", "", "", "")
}
j = j + 3
if (n != 5){
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
saveRDS(p, paste0("./resultados/graficas2025/", i, "_RDS"))
ggsave(paste0("./resultados/graficas2025/", i, ".png"), width = 90, height = 112.5, units = "mm", dpi = 1000)}
}
p_valor_adjust_cor
p_valor_adjust_cor <- append(p_valor_adjust, 1,14)
j <- 1
for (n in c(1:20)) {
i <- colnames(data_2[5:24])[[n]]
tabla_summ <- data_2 %>%  group_by(corte:tiempo) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if (((p_valor_adjust_cor[j]) <= .05)|((p_valor_adjust_cor[j+1]) <= .05)|((p_valor_adjust_cor[j+2]) <= .05)) {
tukey_loop <- TukeyHSD(modelos[[n]])
cld.tukey <- multcompLetters4(modelos[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`corte:tiempo`$Letters)))
colnames(letras) <- c("corte:tiempo", "tukey")
tabla_summ <- merge(tabla_summ, letras)
tabla_summ$`corte:tiempo` <- factor(tabla_summ$`corte:tiempo`, levels = c("control:0", "dissected:0", "control:1", "dissected:1"))
} else {
tabla_summ$tukey <- c("", "", "", "")
}
j = j + 3
if (n != 5){
(p <- barras_tfg() + labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",
str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
saveRDS(p, paste0("./resultados/graficas2025/", i, "_RDS"))
ggsave(paste0("./resultados/graficas2025/", i, ".png"), width = 90, height = 112.5, units = "mm", dpi = 1000)}
}
modelos[[4]]
summary(modelos[[4]])
summary(modelos[[3]])
filter(data_2, tiempo == 0)
filter(data_2, tiempo == 0)$CAT_t
?t.test()
?t.test(CAT_t ~ corte,filter(data_2, tiempo == 0))
t.test(CAT_t ~ corte,filter(data_2, tiempo == 0))
t.test(CAT_t ~ corte,filter(data_2, tiempo == 0)) %>%
t.test(CAT_t ~ corte,filter(data_2, tiempo == 0)) %>%
p.adjust(method = "BH")
t.test(CAT_t ~ corte,filter(data_2, tiempo == 0))
t.test(CAT_t ~ corte,filter(data_2, tiempo == 1))
data_2 %>%
data_2 %>%
group_by(tiempo) %>%
t.test(CAT_t~corte) %>%
p.adjust(method = "bonferroni")
rlang::last_trace()
data_2 %>%
group_by(tiempo) %>%
t.test(CAT_t ~ corte)
library(rstatix)
data_2 %>%
group_by(tiempo) %>%
t.test(CAT_t ~ corte)
data_2 %>%
group_by(tiempo) %>%
t_test(CAT_t ~ corte, p.adjust.method = "bonferroni")
?rstatix::t_test()
data_2 %>%
group_by(tiempo) %>%
t_test(CAT_t ~ corte, p.adjust.method = "BH")
data_2 %>%
group_by(tiempo) %>%
t_test(GST_t ~ corte, p.adjust.method = "BH")
data_2 %>%
group_by(tiempo) %>%
t_test(DTD_t ~ corte, p.adjust.method = "BH")
data_2 %>%
group_by(corte, tiempo) %>%
identify_outliers(score)
data_2 %>%
group_by(corte, tiempo) %>%
identify_outliers(SOD_t)
data_2 %>%
group_by(corte, tiempo) %>%
identify_outliers(SOD_p)
data_2 %>%
group_by(corte, tiempo) %>%
identify_outliers(CAT_t)
data_2 %>%
group_by(corte, tiempo) %>%
identify_outliers(CAT_p)
# Group the data by gender and fit  anova
model <- lm(CAT_t ~ corte * tiempo, data = data_2)
data_2 %>%
group_by(tiempo) %>%
t_test(CAT_t ~ corte, error = model)
data_2 %>%
group_by(tiempo) %>%
anova_test(CAT_t ~ corte, error = model)
# En los casos en los que hay interacción, descomponer el efecto y analizar por separado mediante t test (?)
data_2 %>%
group_by(tiempo) %>%
t_test(CAT_t ~ corte, p.adjust.method = "BH")
# En los casos en los que hay interacción, descomponer el efecto y analizar por separado mediante t test (?)
data_2 %>%
group_by(tiempo) %>%
t_test(CAT_t ~ corte, p.adjust.method = "BH")
