"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "white", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
ggsave("grafica_especies.png", width = 5000 , height = 2500, units = "px", scale = 2, dpi = "retina")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "white", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
ggsave("grafica_especies.png", width = 5000 , height = 4000, units = "px", scale = 2, dpi = "retina")
?theme_minimal()
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_light() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "gray99", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
ggsave("grafica_especies.png", width = 5000 , height = 4000, units = "px", scale = 2, dpi = "retina")
ggsave("grafica_especies.png", width = 4000 , height = 2000, units = "px", scale = 2, dpi = "retina")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "gray99", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank()) +
xlab("") +
ylab("Nº de individuos")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Nº de individuos")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Nº de individuos")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Promedio de número de especies")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Promedio de número de individuos")
### Graficas para Aitana
# 24/10/2023 - 27/10/2023
### Setup y cargar datos ----
# IMPORTANTE: SI NO TIENES INSTALADOS ESTOS PAQUETES, INSTALALOS PRIMERO ANTES DE CARGARLOS
#install.packages("tidyverse")
library(tidyverse)
setwd("D:/collf/Documents") # Aqui tienes que poner la direccion de carpeta donde tienes los datos o quiras guardar el archivo y las graficas
datos <- read.csv2("graficas aitana.csv", encoding = "latin1", dec = ".")
summary(datos) # Aqui pones el nombre del archivo con los datos, o pones "clipboard" para pegarlos como me enseñaste. Asegurate que el separador decimal (dec) esta bien
# Cambiar el tipo de variable y ordenar los niveles
datos$estacion <- as.factor(datos$estacion)
datos$tramo <- as.factor(datos$tramo)
datos$estacion <- ordered(datos$estacion, levels = c("OTOÑO", "INVIERNO", "PRIMAVERA", "VERANO"))
### Cambiar a formato largo ----
# Necesitamos una nueva variable (tipo), que pueda tomar los valores promedio, exotica o amenazada. La función gather() del paquete tidyr hace esto
# Lo hago separando los datos de especies e individuos porque no me apetece pensar
datos_especies <- gather(datos, key = tipo, value = species, sp_promedio:sp_amenzadas) %>% select(estacion, tramo, tipo, species)
datos_especies$tipo <- as.factor(datos_especies$tipo)
datos_especies$tipo <- factor(datos_especies$tipo, levels = c("sp_amenzadas", "sp_promedio", "sp_exoticas"))
datos_individuos <- gather(datos, key = tipo, value = individuos, ind_promedio:ind_amenazadas) %>% select(estacion, tramo, tipo, individuos)
datos_individuos$tipo <- as.factor(datos_individuos$tipo)
datos_individuos$tipo <- factor(datos_individuos$tipo, levels = c("ind_amenazadas", "ind_promedio", "ind_exoticas"))
### Graficas ----
# PARA CAMBIAR COLORES: donde pone values = c(....), estan los 12 colores ordenados. La primera y ultima fila son para amenazadas y para exóticas, pero le tienes que poner el mismo color 4 veces. La fila de en medio para los tramos, ordenados del 1 al 4.
# Para cambiar el color necesitas solo el codigo hex del color y lo pones, importante no borrar las comillas.
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Promedio de número de especies")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Promedio de número de especies")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Promedio de número de individuos")
setwd("D:/collf/Documents/DATOS ISMAEL.csv")
setwd("D:/collf/Documents")
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(tratamiento = as.factor(tratamiento))
ibrary(tidyverse)
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(tratamiento = as.factor(tratamiento))
library(tidyverse)
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(tratamiento = as.factor(tratamiento))
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(Tratamiento = as.factor(Tratamiento))
View(datos)
## Definicion del tema y formato de las graficas ----
theme_tfm <- function(){
theme(panel.background = element_rect(fill = "gray99"),
axis.text = element_text(size = 9),
plot.title = element_text(size = 14, face = "bold", hjust = 1),
strip.text.x = element_text(size = 12, face = "bold", vjust = 0),
axis.title = element_text(size = 12),
legend.position = "none",
panel.grid = element_blank(),
axis.line = element_line(colour = "gray10"),
axis.ticks = element_line(color = "gray10"))
#strip.background = element_rect(colour = "black")
}
p_sod <- ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_col()
(p_sod <- ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_col()
)
(p_sod <- ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_errorbar(aes(ymax = SOD + SEM_SOD, ymin = SOD - SEM_SOD)) +
geom_col() +
)
(p_sod <- ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_errorbar(aes(ymax = SOD + SEM_SOD, ymin = SOD - SEM_SOD)) +
geom_col() +
)
ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_errorbar(aes(ymax = SOD + SEM_SOD, ymin = SOD - SEM_SOD)) +
geom_col()
GEOM_ERRORBAR()
?geom_errorbar()
ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_errorbar(aes(ymax = (SOD + SEM_SOD), ymin = (SOD - SEM_SOD))) +
geom_col()
summary(datos)
?read.csv2()
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1", colClasses = "numeric")%>%
mutate(Tratamiento = as.factor(Tratamiento))
as.numeric(SOD)
as.numeric(datos$SOD)
ggplot(datos, aes(x = Tratamiento, y = as.numeric(SOD))) +
geom_errorbar(aes(ymax = as.numeric(SOD) +as.numeric(SEM_SOD), ymin = as.numeric(SOD)-as.numeric(SEM_SOD))) +
geom_col()
library(tidyverse)
library(car)
library(multcompView)
library(patchwork)
library(rstatix)
library(ggpubr)
posthoc <- function(){
if (any(filter(as.tibble(anova_results), variable == i)$p.adj <= 0.05, na.rm = T)){
print("There is at least one significative effect")
if (filter(as.tibble(anova_results), variable == i)$p.adj[3] <= 0.05){
print("Interaction is significative")
}
else{
print("Interaction is not significative")
if (any(filter(as.tibble(anova_results), variable == i)$p.adj[-3] <= 0.05, na.rm = F)){
print("One main effect is significative")
}
else{
print("Two main effects are significative")
}
}
}
else{print("There is no significative effects")}
}
setwd("D:/collf/Documents")
datos <- read.csv2(".ismael.csv")
datos <- read.csv2("ismael.csv")
View(datos)
datos <- read.csv2("ismael.csv") %>%
t.test(datos)
datos <- read.csv2("ismael.csv") %>%
t.test(datos)
t.test(datos)
(a <- t.test(datos))
?t.test()
(a <- t.test(valor ~ tratamiento, data =datos))
View(datos)
(a <- t.test(valor ~ tratamietno, data =datos))
View(datos)
summary(datos)
library(tidyverse)
datos <- read.csv2("ismael.csv")
datos <- read.csv2("ismael.csv") %>%
datos <- read.csv2("ismael.csv") %>%
mutate(valor = as.numeric(valor), tratamietno = as.factor(tratamietno))
(a <- t.test(valor ~ tratamietno, data =datos))
library(dplyr)
library(readr)
df <- list.files(path="C:/Users/collf/Desktop/csv_epiteliales_azules/", full.names = TRUE) %>%
lapply(read_csv) %>%
bind_rows
View(df)
# Esto es para guardarlo como csv.
# Acuerdate de poner el nombre de archivo.csv al final
write.csv(df, "C:/Users/collf/Desktop/csv_epiteliales_azules/conteo.csv", row.names = F)
read.csv("D:/collf/Documents/GELES.csv")
data <- read.csv("D:/collf/Documents/GELES.csv")
View(data)
data <- read.csv2("D:/collf/Documents/GELES.csv")
library(dplyr)
summary(data)
?read.csv2
data <- read.csv2("D:/collf/Documents/GELES.csv", dec = ".")
summary(data)
?t.test()
t.test(AvVASA ~ tratamiento, data = data)
t.ca2mg <- t.test(AvCA2Mg ~ tratamiento, data = data)
(t.ca2mg <- t.test(AvCA2Mg ~ tratamiento, data = data))
(t.pl10 <- t.test(AvPl10 ~ tratamiento, data = data))
(t.pl10 <- t.test(AvPL10 ~ tratamiento, data = data))
(t.gfp <- t.test(AvGFP ~ tratamiento, data = data))
summary(t.ca2mg)
t.vasa
# T-test para las cuatro variables
(t.vasa <- t.test(AvVASA ~ tratamiento, data = data))
t.vasa
# Asunciones
shapiro.test(data$AvVASA)
shapiro.test(data$AvCA2Mg)
shapiro.test(data$AvPL10)
plot(t.vasa)
shapiro.test(data$AvGFP)
library(car)
# Asuncion de homocedasticidad
leveneTest(data$AvVASA)
# Asuncion de homocedasticidad
leveneTest(data$AvVASA, group = tratamiento)
# Asuncion de homocedasticidad
leveneTest(data$AvVASA, group = data$tratamiento)
leveneTest(data$AvCA2Mg, group = data$tratamiento)
leveneTest(data$AvPL10, group = data$tratamiento)
leveneTest(data$AvGFP, group = data$tratamiento)
library(tidyverse)
library(psych)
library(MVN)
library(factoextra)
library(ggpubr)
library(tidyverse)
library(rstatix)
library(ggpubr)
library(patchwork)
### SETUP ----
#setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
setwd("D:/collf/Documents/GitHub/Revision_datos_TFG")
source(file = "./scripts septiembre 2024-2025/0_lectura.R")
data <- filter(datos_long, cultivo == "Si") %>%
mutate(grupo = time:section)
data$GPx[9] <- NA # Afecta a homcedasticidad y es extremo
data$GPx[6] <- NA #HOMOCEDASTICIDAD
data$GPx[2] <- NA
data$GPx[33] <- NA #posible
data$GPx[4] <- NA # Quitar el otro dato  #4 para l GPx tentacular
data$GPx[38] <- NA # outlier extremo
data$GPx[51] <- NA # extremo
data$GPx[53] <- NA
data$GPx[66] <- NA
data$GPx[69] <- NA
# Se eliminan:
data$SOD[7] <- NA #para normalidad
data$SOD[3] <- NA #para normalidad
data$CAT[35] <- NA # La funcion ha identificado otro, pero su eliminacion no afecta a la normalidad de residuos, este si.
data$Mielo[62] <- NA
data$Mielo[18] <- NA #Sospechoso, y afecta a normalidad
data$Facida[66] # sospechoso, outlier no extremo
data$Fbasica[48] <- NA # outlier extremo
data$Fbasica[51] # incrementa mucho error pero no se puede quitar porque violaria homocedasticidad
data$Fbasica[9] <- NA # Afecta a homocedasticidad
data$Lisozima[69] <- NA # outlier extremo
data$Lisozima[70] <- NA # outlier extremo
data$Lisozima[38] <- NA # outlier extremo
data$MDA[65] <- NA # Outlier no extremo pero parece que puede afectar al resultado del analisis y afecta a la varianza del grupo.
# Funcion de grafica
f.boxplot <- function(x){
ggboxplot(data, x = "time", y = x, color = "grupo", fill = "grupo", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#12A3F8","#E64B35FF","#0571B0","#BE2F36")) +
scale_color_manual(values = c("#12A3F8","#E64B35FF","#0571B0","#BE2F36"), labels = c("Control T1", "Sectioned T1","Control T2", "Sectioned T2")) + guides(fill = "none") +
ylim(0, 1.2*max(data %>% select(x), na.rm = T)) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
filename = sprintf("%s.png", x)
filenamesvg = sprintf("%s.svg", x)
ggsave(filename, path = "./resultados/graficas2025/boxplot")
ggsave(filenamesvg, path = "./resultados/graficas2025/boxplot", device = "svg")
}
plots <- sapply(colnames(data[6:18]), f.boxplot)
?ggsave()
?ggsave()
ggsave(filename, path = "./resultados/graficas2025/boxplot", width = 8, height = 5, units = "in")
# Funcion de grafica
f.boxplot <- function(x){
ggboxplot(data, x = "time", y = x, color = "grupo", fill = "grupo", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#12A3F8","#E64B35FF","#0571B0","#BE2F36")) +
scale_color_manual(values = c("#12A3F8","#E64B35FF","#0571B0","#BE2F36"), labels = c("Control T1", "Sectioned T1","Control T2", "Sectioned T2")) + guides(fill = "none") +
ylim(0, 1.2*max(data %>% select(x), na.rm = T)) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
filename = sprintf("%s.png", x)
filenamesvg = sprintf("%s.svg", x)
ggsave(filename, path = "./resultados/graficas2025/boxplot", width = 8, height = 5, units = "in")
ggsave(filenamesvg, path = "./resultados/graficas2025/boxplot", device = "svg",width = 8, height = 5, units = "in")
}
plots <- sapply(colnames(data[6:18]), f.boxplot)
# Funcion de grafica
f.boxplot <- function(x){
ggboxplot(data, x = "time", y = x, color = "grupo", fill = "grupo", alpha = 0.15, width = 0.5, add = c("jitter", "mean"), add.params = list(shape = 1), facet.by = "tejido", ylab = "U/mg protein", panel.labs = list(tejido = c("Column", "Tentacle"))) +
theme_test() + labs(color = "Treatment")+ labs_pubr() +
scale_x_discrete(labels = c("T1", "T2")) +
scale_fill_manual(values = c("#12A3F8","#E64B35FF","#0571B0","#BE2F36")) +
scale_color_manual(values = c("#12A3F8","#E64B35FF","#0571B0","#BE2F36"), labels = c("Control T1", "Sectioned T1","Control T2", "Sectioned T2")) + guides(fill = "none") +
ylim(0, 1.2*max(data %>% select(x), na.rm = T)) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(size = 9))
filename = sprintf("%s.png", x)
filenamesvg = sprintf("%s.svg", x)
ggsave(filename, path = "./resultados/graficas2025/boxplot", width = 7, height = 3.5, units = "in")
ggsave(filenamesvg, path = "./resultados/graficas2025/boxplot", device = "svg",width = 7, height = 3.5, units = "in")
}
plots <- sapply(colnames(data[6:18]), f.boxplot)
View(data)
