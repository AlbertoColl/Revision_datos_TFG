hist(data_2$SOD_pie)
library(tidyverse)
library(car)
library(multcompView)
### Cargar datos y filtrar para el analisis ----
# setwd("D:/collf/Documents/GitHub/Revision_datos_TFG") # Casa
#source(file = "./analisis 12-2023/0_data_home.R")
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./analisis 12-2023/0_data_lab.R")
source(file = "./analisis 12-2023/0_5_graficas.R")
data_2 <- filter(datos, cultivo == "cultured") %>%
filter((corte == "dissected") | ((corte == "control") & (madurez == "No"))) %>%
mutate(tratamiento = as.factor(case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2")))
hist(data_2$SOD)
View(data_2)
hist(filter(data_2, tejido = "Pie")$SOD)
hist(filter(data_2, tejido == "Pie")$SOD)
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
datos <- read.csv2("./datos/TFG_datos.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(playa = as.factor(playa), cultivo = as.factor(cultivo),
corte = as.factor(corte), madurez = as.factor(madurez),
tejido = as.factor(tejido))
View(datos)
datos <- read.csv2("./datos/TFG_datos_2024.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(playa = as.factor(playa), cultivo = as.factor(cultivo),
corte = as.factor(corte), madurez = as.factor(madurez),
tejido = as.factor(tejido))
View(datos)
datos <- read.csv2("./datos/TFG_datos_2024.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(playa = as.factor(playa), cultivo = as.factor(cultivo),
corte = as.factor(corte), madurez = as.factor(madurez))
datos$playa <- factor(datos$playa, levels = c("Calahonda", "Almuñecar", "Salobreña")) # Reordenar niveles
datos <- read.csv2("./datos/TFG_datos.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(playa = as.factor(playa), cultivo = as.factor(cultivo),
corte = as.factor(corte), madurez = as.factor(madurez))
datos <- read.csv2("./datos/TFG_datos.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(playa = as.factor(playa), cultivo = as.factor(cultivo),
corte = as.factor(corte), madurez = as.factor(madurez),
tejido = as.factor(tejido))
# Pivotar variable tejido a nuevas variables
datos <- datos %>% pivot_longer(cols = c(SOD, CAT, GPx, GR, GST, DTD, G6PDH, TEAC, MDA, proteina)) %>%
mutate(variable = paste0(name, "_", ifelse(tejido == "Tentaculo", "t", "p")),
tiempo = ifelse(madurez == "No", "0", "1")) %>%
select(individuo, playa,cultivo, corte, tiempo, variable, value) %>%
pivot_wider(names_from = variable, values_from = value)
# Poner in english los nombres de los niveles
datos$corte <- factor(datos$corte, levels = c("No", "Si"), labels = c("control", "dissected"))
datos$cultivo <- factor(datos$cultivo, levels = c("No", "Si"), labels = c("wild", "cultured"))
# Limpieza de datos ----
datos <- datos %>%
mutate(GPx = ifelse(GPx < 0, NA, GPx))  # hay datos de gpx negativos
# Limpieza de datos ----
datos <- datos %>%
mutate(GPx_t = ifelse(GPx_t < 0, NA, GPx_t))  # hay datos de gpx negativos
# Limpieza de datos ----
datos <- datos %>%
mutate(GPx_t = ifelse(GPx_t < 0, NA, GPx_t),
GPx_p = ifelse(GPx_p < 0, NA, GPx_p))  # hay datos de gpx negativos
# En laboratorio
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
# En laboratorio
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./scripts enero24/0_data_lab.R")
# En laboratorio
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./scripts enero24/0_data_lab.R")
source(file = "./scripts septiembre 2024/0_data_lab.R")
source(file = "./analisis 12-2023/0_5_graficas.R")
# En laboratorio
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./scripts septiembre 2024/0_data_lab.R")
source(file = "./analisis 12-2023/0_5_graficas.R")
# Filtrar para Objetivo 2
data_2 <- filter(datos, cultivo == "cultured") %>%
filter((corte == "dissected") | ((corte == "control") & (madurez == "No"))) %>%
mutate(tratamiento = as.factor(case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2")))
View(data_2)
View(data_2)
View(datos)
source(file = "./scripts septiembre 2024/0_data_lab.R")
source(file = "./analisis 12-2023/0_5_graficas.R")
# En laboratorio
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./scripts septiembre 2024/0_data_lab.R")
source(file = "./analisis 12-2023/0_5_graficas.R")
library(tidyverse)
# En laboratorio
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./scripts septiembre 2024/0_data_lab.R")
source(file = "./analisis 12-2023/0_5_graficas.R")
# En laboratorio
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./scripts septiembre 2024/0_data_lab.R")
# Filtrar para Objetivo 2
data_2 <- filter(datos, cultivo == "cultured") %>%
filter((corte == "dissected") | ((corte == "control") & (madurez == "No"))) %>%
mutate(tratamiento = as.factor(case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2")))
View(datos)
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
datos <- read.csv2("./datos/TFG_datos.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(playa = as.factor(playa), cultivo = as.factor(cultivo),
corte = as.factor(corte), madurez = as.factor(madurez),
tejido = as.factor(tejido))
# En laboratorio
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./scripts septiembre 2024/0_data_lab.R")
# Filtrar para Objetivo 2
data_2 <- filter(datos, cultivo == "cultured") %>%
filter((corte == "dissected") | ((corte == "control") & (tiempo == "No"))) %>%
mutate(tratamiento = as.factor(case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2")))
# En laboratorio
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./scripts septiembre 2024/0_data_lab.R")
# En laboratorio
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./scripts septiembre 2024/0_data_lab.R")
# Pivotar variable tejido a nuevas variables
datos <- datos %>% pivot_longer(cols = c(SOD, CAT, GPx, GR, GST, DTD, G6PDH, TEAC, MDA, proteina)) %>%
mutate(variable = paste0(name, "_", ifelse(tejido == "Tentaculo", "t", "p")),
select(individuo, playa,cultivo, corte, madurez, variable, value) %>%
pivot_wider(names_from = variable, values_from = value))
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
datos <- read.csv2("./datos/TFG_datos.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(playa = as.factor(playa), cultivo = as.factor(cultivo),
corte = as.factor(corte), madurez = as.factor(madurez),
tejido = as.factor(tejido))
datos$playa <- factor(datos$playa, levels = c("Calahonda", "Almuñecar", "Salobreña")) # Reordenar niveles
# Pivotar variable tejido a nuevas variables
datos <- datos %>% pivot_longer(cols = c(SOD, CAT, GPx, GR, GST, DTD, G6PDH, TEAC, MDA, proteina)) %>%
mutate(variable = paste0(name, "_", ifelse(tejido == "Tentaculo", "t", "p")),
select(individuo, playa,cultivo, corte, madurez, variable, value) %>%
pivot_wider(names_from = variable, values_from = value))
rlang::last_trace()
datos <- read.csv2("./datos/TFG_datos_2024.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(playa = as.factor(playa), cultivo = as.factor(cultivo),
corte = as.factor(corte), madurez = as.factor(madurez))
datos$playa <- factor(datos$playa, levels = c("Calahonda", "Almuñecar", "Salobreña")) # Reordenar niveles
# Poner in english los nombres de los niveles
datos$corte <- factor(datos$corte, levels = c("No", "Si"), labels = c("control", "dissected"))
datos$cultivo <- factor(datos$cultivo, levels = c("No", "Si"), labels = c("wild", "cultured"))
# Limpieza de datos ----
datos <- datos %>%
mutate(GPx_t = ifelse(GPx_t < 0, NA, GPx_t),
GPx_p = ifelse(GPx_p < 0, NA, GPx_p))  # hay datos de gpx negativos
# En laboratorio
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./scripts septiembre 2024/0_data_lab.R")
# Filtrar para Objetivo 2
data_2 <- filter(datos, cultivo == "cultured") %>%
filter((corte == "dissected") | ((corte == "control") & (tiempo == "No"))) %>%
mutate(tratamiento = as.factor(case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2")))
# Filtrar para Objetivo 2
data_2 <- filter(datos, cultivo == "cultured") %>%
filter((corte == "dissected") | ((corte == "control") & (madurez == "No"))) %>%
mutate(tratamiento = as.factor(case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2")))
View(data_2)
modelos <- lapply(colnames(datos[c(6:25)]), function(x){
aov(formula = as.formula(paste0(x, " ~ tratamiento")), datos)})
modelos <- lapply(colnames(data_2[c(6:25)]), function(x){
aov(formula = as.formula(paste0(x, " ~ tratamiento")), datos)})
View(data_2)
x = "SOD"
as.formula(paste0(x, " ~ tratamiento")
)
modelos <- lapply(colnames(data_2[c(6:25)]), function(x){
aov(formula = as.formula(paste0(x, " ~ tratamiento")), datos)})
modelos <- lapply(colnames(data_2[c(6:25)]), function(x){
aov(formula = as.formula(paste0(x, " ~ tratamiento")), data_2)})
sapply(modelos, function(x){
print(x$terms[[2]])
shapiro.test(residuals(x))})
# Asuncion de HOMOCEDASTICIDAD
sapply(modelos, function(x){
print(leveneTest(x))})
library(MVN)
mvn(data_2, mvnTest = "mardia")
mvn(data_2[c(6:25)], mvnTest = "mardia")
install.packages("mvnormtest")
library(mvnormtest)
mshapiro.test(data_2[c(6:25)])
d_matrix <- as.matrix(data_2[c(6:25)])
View(d_matrix)
mshapiro.test(d_matrix)
sapply(modelos, function(x){
print(x$terms[[2]])
shapiro.test(residuals(x))})
modelos_p[[3]] <- aov(log(CAT_t) ~ tratamiento,data = data_2)
modelos[[3]] <- aov(log(CAT_t) ~ tratamiento,data = data_2)
modelos[[14]] <- aov(log(G6PDH_p) ~ tratamiento,data = data_2)
sapply(modelos, function(x){
print(x$terms[[2]])
shapiro.test(residuals(x))})
### RESULTADOS DEL ANOVA ----
for (i in c(1:20)) {
print(colnames(data_2[6:25][i]))
print(summary(modelos[[i]]))}
ggplot(data_2, aes(y = SOD_p)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 0.8)
library(tidyverse)
ggplot(data_2, aes(y = SOD_p)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 0.8)
ggplot(data_2, aes(y = SOD_p)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 0.8)
ggplot(data_2, aes(y = SOD_p)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 0.8)
data_2$SOD_p[6]
ggplot(data_2, aes(y = CAT_p)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 0.8)
data_2$CAT_p[16]
ggplot(data_2, aes(y = G6PDH_t)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 0.8)
ggplot(data_2, aes(y = MDA_p)) +
geom_boxplot(aes(x = tratamiento, color = tratamiento), alpha = 0) +
geom_point(aes(x = tratamiento, color = tratamiento), alpha = 0.8)
# en g6pdh_t no veo ningun outlier muy claro
data_2$MDA_p[20]
data_2$SOD_p[6] <- NA # FUERA DE RANGO IQ Y PARECE INFLUIR EL ANALISIS
data_2$CAT_p[16] <- NA # FUERA DE RANGO IQ Y PARECE INFLUIR EL ANALISIS
# en g6pdh_t no veo ningun outlier muy claro
data_2$MDA_p[20] <- NA # Muy fuera de rango IQ
modelos <- lapply(colnames(data_2[c(6:25)]), function(x){
aov(formula = as.formula(paste0(x, " ~ tratamiento")), data_2)})
sapply(modelos, function(x){
print(x$terms[[2]])
shapiro.test(residuals(x))})
# Asuncion de HOMOCEDASTICIDAD
sapply(modelos, function(x){
print(leveneTest(x))})
# Transformacion logaritmica para supuesto de normalidad
modelos[[3]] <- aov(log(CAT_t) ~ tratamiento,data = data_2)
modelos[[14]] <- aov(log(G6PDH_p) ~ tratamiento,data = data_2)
sapply(modelos, function(x){
print(x$terms[[2]])
shapiro.test(residuals(x))})
### RESULTADOS DEL ANOVA ----
for (i in c(1:20)) {
print(colnames(data_2[6:25][i]))
print(summary(modelos[[i]]))}
