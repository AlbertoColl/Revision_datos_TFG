leveneTest(m.rank.p)
# TENTACULO
m.rank.t <- aov(
rank(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo"))
Anova(m.rank.t, type = 3)
plot(m.rank.t, 2)
shapiro.test(m.rank.t$residuals)
plot(m.rank.t, 1)
leveneTest(m.rank.t)
view(select(filter(data_!, tejido == Tentaculo), cultivo, playa, G6PDH))
view(select(filter(data_1, tejido == Tentaculo), cultivo, playa, G6PDH))
view(select(filter(data_1, tejido == "Tentaculo"), cultivo, playa, G6PDH))
modelos_corr_p <- sapply(modelos_p, function(x){})
Anova(x, type = 3)
modelos_corr_p <- sapply(modelos_p, function(x){
Anova(x, type = 3)
})
modelos_corr_p
modelos_corr_p[1]
summary(modelos_corr_p[1])
summary(modelos_corr_p[[1]])
Anova(modelos_p[[1]], type = 3)
Anova(modelos_p[[2]], type = 3)
Anova(modelos_p[[3]], type = 3)
Anova(modelos_p[[4]], type = 3)
Anova(modelos_p[[5]], type = 3)
Anova(modelos_p[[5]], type = 3)
Anova(modelos_p[[6]], type = 3)
Anova(modelos_p[[7]], type = 3)
Anova(modelos_p[[8]], type = 3)
Anova(modelos_t[[1]], type = 3)
Anova(modelos_t[[2]], type = 3)
Anova(modelos_t[[3]], type = 3)
Anova(modelos_t[[4]], type = 3)
Anova(modelos_t[[5]], type = 3)
Anova(modelos_t[[6]], type = 3)
Anova(modelos_t[[7]], type = 3)
Anova(modelos_t[[8]], type = 3)
Anova(modelos_t[[8]], type = 3)
m.temp <- Anova(modelos_t[[8]], type = 3)
m.temp$`Pr(>F)`[1]
m.temp$`Pr(>F)`
n <- 1
i <- colnames(select(data_1, -GPx, -G6PDH)[c(7:14)])[[n]]
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Pie") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey # Aqui tengo que añadir la interaccion
m.temp <- Anova(modelos_p[[n]], type == "III")
# Test post-hoc Tukey # Aqui tengo que añadir la interaccion
m.temp <- Anova(modelos_p[[n]], type = "III")
m.temp[["Pr(>F)"]][3]
m.temp[["Pr(>F)"]]
m.temp[["Pr(>F)"]][4]
m.temp
(((m.temp[["Pr(>F)"]][3]) <= 0.05) |  ((m.temp[["Pr(>F)"]][4]) <= 0.05))
TukeyHSD(m.temp)
TukeyHSD(aov(m.temp))
ç
type(modelos_p[[1]])
typeof(modelos_p[[1]])
summary+(modelos_p[[1]])
summary(modelos_p[[1]])
typeof(m.temp)
summary(m.temp)
# Test post-hoc Tukey # Aqui tengo que añadir la interaccion
m.temp <- Anova(modelos_p[[n]], type = "III")
summary(m.temp)
m.temp
TukeyHSD(m.temp)
class(m.temp)
class(modelos_p[[1]])
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((m.temp[["Pr(>F)"]][2]) <= 0.05){
diferencias  <-  TRUE
prob <- m.temp[["Pr(>F)"]][2]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
i <- colnames(select(data_1, -GPx, -G6PDH)[c(7:14)])[[n]]
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Pie") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey # Aqui tengo que añadir la interaccion
m.temp <- Anova(modelos_p[[n]], type = "III")
if (((m.temp[["Pr(>F)"]][3]) <= 0.05) |  ((m.temp[["Pr(>F)"]][4]) <= 0.05)){
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
# EN EL CASO DE MDA_p hacemos test de fisher porque tukey no detecta diferencias
if(n == 8){
fisher.loop <- LSD.test(modelos_p[[n]], c("cultivo", "playa"))
(letras <- rownames_to_column(as.data.frame(fisher.loop$groups)))
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1),
tukey = case_when(groups == "a" ~ "b",
groups == "b" ~ "a",
TRUE ~ "ab")) %>%  select(-MDA, -rowname, -groups)
}
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "", "", "")
}
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((m.temp[["Pr(>F)"]][2]) <= 0.05){
diferencias  <-  TRUE
prob <- m.temp[["Pr(>F)"]][2]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
if(diferencias) {p <- p + annotate("segment", x = 0.75, xend = 2.25, y =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 0.75, xend = 0.75, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 2.25, xend = 2.25, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("text", x = 1.5, y = 1.18 * (max(tabla_summ$media) + max(tabla_summ$error)), label = significacion, size = 7)} # Si hubo diferencias, añade elementos a la grafica
# Guardamos graficas
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Column))", size = 5, color = "gray30", parse = T))
n <- 7
i <- colnames(select(data_1, -GPx, -G6PDH)[c(7:14)])[[n]]
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Pie") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey # Aqui tengo que añadir la interaccion
m.temp <- Anova(modelos_p[[n]], type = "III")
if (((m.temp[["Pr(>F)"]][3]) <= 0.05) |  ((m.temp[["Pr(>F)"]][4]) <= 0.05)){
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
# EN EL CASO DE MDA_p hacemos test de fisher porque tukey no detecta diferencias
if(n == 8){
fisher.loop <- LSD.test(modelos_p[[n]], c("cultivo", "playa"))
(letras <- rownames_to_column(as.data.frame(fisher.loop$groups)))
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1),
tukey = case_when(groups == "a" ~ "b",
groups == "b" ~ "a",
TRUE ~ "ab")) %>%  select(-MDA, -rowname, -groups)
}
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "", "", "")
}
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((m.temp[["Pr(>F)"]][2]) <= 0.05){
diferencias  <-  TRUE
prob <- m.temp[["Pr(>F)"]][2]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
if(diferencias) {p <- p + annotate("segment", x = 0.75, xend = 2.25, y =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 0.75, xend = 0.75, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 2.25, xend = 2.25, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("text", x = 1.5, y = 1.18 * (max(tabla_summ$media) + max(tabla_summ$error)), label = significacion, size = 7)} # Si hubo diferencias, añade elementos a la grafica
# Guardamos graficas
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Column))", size = 5, color = "gray30", parse = T))
Anova(modelos_p[[7]], type = 3)
i <- colnames(select(data_1, -GPx, -G6PDH)[c(7:14)])[[n]]
i
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Pie") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey # Aqui tengo que añadir la interaccion
m.temp <- Anova(modelos_p[[n]], type = "III")
(((m.temp[["Pr(>F)"]][3]) <= 0.05) |  ((m.temp[["Pr(>F)"]][4]) <= 0.05))
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
for (n in c(1:8)) { ### PIE
i <- colnames(select(data_1, -GPx, -G6PDH)[c(7:14)])[[n]]
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Pie") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey # Aqui tengo que añadir la interaccion
m.temp <- Anova(modelos_p[[n]], type = "III")
if (((m.temp[["Pr(>F)"]][3]) <= 0.05) |  ((m.temp[["Pr(>F)"]][4]) <= 0.05)){
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
# EN EL CASO DE MDA_p hacemos test de fisher porque tukey no detecta diferencias
if(n == 8){
fisher.loop <- LSD.test(modelos_p[[n]], c("cultivo", "playa"))
(letras <- rownames_to_column(as.data.frame(fisher.loop$groups)))
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1),
tukey = case_when(groups == "a" ~ "b",
groups == "b" ~ "a",
TRUE ~ "ab")) %>%  select(-MDA, -rowname, -groups)
}
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "", "", "")
}
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((m.temp[["Pr(>F)"]][2]) <= 0.05){
diferencias  <-  TRUE
prob <- m.temp[["Pr(>F)"]][2]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
if(diferencias) {p <- p + annotate("segment", x = 0.75, xend = 2.25, y =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 0.75, xend = 0.75, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 2.25, xend = 2.25, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("text", x = 1.5, y = 1.18 * (max(tabla_summ$media) + max(tabla_summ$error)), label = significacion, size = 7)} # Si hubo diferencias, añade elementos a la grafica
# Guardamos graficas
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Column))", size = 5, color = "gray30", parse = T))
ggsave(paste0("./resultados/1/", i, "_pie_v2.png"), width = 340, height = 510, units = "px", scale = 2, dpi = "retina")
} # PIE
for (n in c(1:8)) { ### TENTACULO
i <- colnames(select(data_1, -GPx, -G6PDH)[c(7:14)])[[n]]
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Tentaculo") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey
m.temp <- Anova(modelos_t[[n]], type = "III")
if (((m.temp[["Pr(>F)"]][3]) <= 0.05) |  ((m.temp[["Pr(>F)"]][4]) <= 0.05)){
tukey_loop <- TukeyHSD(modelos_t[[n]])
cld.tukey <- multcompLetters4(modelos_t[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "", "", "")
}
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((m.temp[["Pr(>F)"]][2]) <= 0.05){
diferencias  <-  TRUE
prob <- m.temp[["Pr(>F)"]][2]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
if(diferencias) {p <- p + annotate("segment", x = 0.75, xend = 2.25, y =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 0.75, xend = 0.75, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 2.25, xend = 2.25, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("text", x = 1.5, y = 1.18 * (max(tabla_summ$media) + max(tabla_summ$error)), label = significacion, size = 7)} # Si hubo diferencias, añade elementos a la grafica
# Guardamos graficas
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T) +
theme(legend.position = "right"))
ggsave(paste0("./resultados/1/", i, "_tent_v2.png"), width = 510, height = 510, units = "px", scale = 2, dpi = "retina")
} # TENTACULO
Anova(modelos_p[[1]])
Anova(modelos_t[[1]])
Anova(modelos_p[[2]])
Anova(modelos_t[[2]])
Anova(modelos_p[[1]], type = 3)
Anova(modelos_t[[1]], type = 3)
Anova(modelos_p[[2]], type = 3)
Anova(modelos_t[[2]], type = 3)
Anova(modelos_p[[3]], type = 3)
Anova(modelos_t[[3]], type = 3)
Anova(modelos_p[[4]], type = 3)
Anova(modelos_t[[4]], type = 3)
Anova(modelos_p[54]], type = 3)
Anova(modelos_p[[5]]], type = 3)
Anova(modelos_p[[5]], type = 3)
Anova(modelos_t[[5]], type = 3)
Anova(modelos_p[[7]], type = 3)
Anova(modelos_t[[7]], type = 3)
Anova(modelos_p[[8]], type = 3)
Anova(modelos_t[[8]], type = 3)
m.p <- Anova(aov(G6PDH ~ cultivo * playa, data = filter(data_1, tejido == "Pie")), type = 3)
m.p
m.t <- Anova(aov(G6PDH ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo")), type = 3)
m.t
m.p <- Anova(aov(log(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Pie")), type = 3)
m.p
m.t <- Anova(aov(log(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo")), type = 3)
m.t
levene.Test(m.p)
leveneTest(m.p)
leveneTest(aov(log(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Pie"))
leveneTest(aov(log(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Pie")))
leveneTest(aov(log(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Pie")))
leveneTest(aov(log(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo")))
leveneTest(aov(sqrt(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo")))
leveneTest(aov(rank(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo")))
leveneTest(aov(log(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo")))
leveneTest(aov(sqrt(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo")))
leveneTest(aov(rank(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo")))
shapiro.test(aov(G6PDH ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo")))
shapiro.test(aov(G6PDH ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo"))$residuals)
shapiro.test(aov(G6PDH ~ cultivo * playa, data = filter(data_1, tejido == "Pie"))$residuals)
leveneTest(aov(G6PDH ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo")))
leveneTest(aov(log(G6PDH) ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo")))
modelos_p <- lapply(colnames(select(data_1, -GPx, )[c(7:15)]), function(x){
aov(formula = as.formula(paste0(x, " ~ cultivo * playa")), filter(data_1, tejido == "Pie"))})
modelos_t <- lapply(colnames(select(data_1, -GPx)[c(7:15)]), function(x){
aov(formula = as.formula(paste0(x, " ~ cultivo * playa")), filter(select(data_1, -GPx), tejido == "Tentaculo"))})
modelos_t <- lapply(colnames(select(data_1, -GPx)[c(7:15)]), function(x){
aov(formula = as.formula(paste0(x, " ~ cultivo * playa")), filter(tejido == "Tentaculo"))})
modelos_t <- lapply(colnames(select(data_1, -GPx)[c(7:15)]), function(x){
aov(formula = as.formula(paste0(x, " ~ cultivo * playa")), filter(data_1, tejido == "Tentaculo"))})
modelos_t <- lapply(colnames(select(data_1, -GPx)[c(7:15)]), function(x){
aov(formula = as.formula(paste0(x, " ~ cultivo * playa")), filter(data_1, tejido == "Tentaculo"))})
modelos_t[[3]] <- aov(log(GR) ~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo"))
modelos_t[[4]] <- aov(log(GST) ~ cultivo * playa, data = filter(data_1,tejido == "Tentaculo"))
modelos_p[[4]] <- aov(log(GST) ~ cultivo * playa, data = filter(data_1, tejido == "Pie"))
modelos_p[[3]] <-  aov(log(GR) ~ cultivo * playa, data = filter(data_1, tejido == "Pie"))
for (n in c(1:9)) { ### PIE
i <- colnames(select(data_1, -GPx)[c(7:15)])[[n]]
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Pie") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey # Aqui tengo que añadir la interaccion
m.temp <- Anova(modelos_p[[n]], type = "III")
if (((m.temp[["Pr(>F)"]][3]) <= 0.05) |  ((m.temp[["Pr(>F)"]][4]) <= 0.05)){
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
# EN EL CASO DE MDA_p hacemos test de fisher porque tukey no detecta diferencias
if(n == 9){
fisher.loop <- LSD.test(modelos_p[[n]], c("cultivo", "playa"))
(letras <- rownames_to_column(as.data.frame(fisher.loop$groups)))
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1),
tukey = case_when(groups == "a" ~ "b",
groups == "b" ~ "a",
TRUE ~ "ab")) %>%  select(-MDA, -rowname, -groups)
}
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "", "", "")
}
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((m.temp[["Pr(>F)"]][2]) <= 0.05){
diferencias  <-  TRUE
prob <- m.temp[["Pr(>F)"]][2]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
if(diferencias) {p <- p + annotate("segment", x = 0.75, xend = 2.25, y =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 0.75, xend = 0.75, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 2.25, xend = 2.25, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("text", x = 1.5, y = 1.18 * (max(tabla_summ$media) + max(tabla_summ$error)), label = significacion, size = 7)} # Si hubo diferencias, añade elementos a la grafica
# Guardamos graficas
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Column))", size = 5, color = "gray30", parse = T))
ggsave(paste0("./resultados/1/", i, "_pie_v2.png"), width = 340, height = 510, units = "px", scale = 2, dpi = "retina")
} # PIE
for (n in c(1:9)) { ### TENTACULO
i <- colnames(select(data_1, -GPx)[c(7:15)])[[n]]
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Tentaculo") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey
m.temp <- Anova(modelos_t[[n]], type = "III")
if (((m.temp[["Pr(>F)"]][3]) <= 0.05) |  ((m.temp[["Pr(>F)"]][4]) <= 0.05)){
tukey_loop <- TukeyHSD(modelos_t[[n]])
cld.tukey <- multcompLetters4(modelos_t[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "", "", "")
}
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((m.temp[["Pr(>F)"]][2]) <= 0.05){
diferencias  <-  TRUE
prob <- m.temp[["Pr(>F)"]][2]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
if(diferencias) {p <- p + annotate("segment", x = 0.75, xend = 2.25, y =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 0.75, xend = 0.75, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 2.25, xend = 2.25, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("text", x = 1.5, y = 1.18 * (max(tabla_summ$media) + max(tabla_summ$error)), label = significacion, size = 7)} # Si hubo diferencias, añade elementos a la grafica
# Guardamos graficas
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T) +
theme(legend.position = "right"))
ggsave(paste0("./resultados/1/", i, "_tent_v2.png"), width = 510, height = 510, units = "px", scale = 2, dpi = "retina")
} # TENTACULO
n <- 5
i <- colnames(select(data_1, -GPx)[c(7:15)])[[n]]
i
n <- 6
i <- colnames(select(data_1, -GPx)[c(7:15)])[[n]]
i
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Tentaculo") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey
m.temp <- Anova(modelos_t[[n]], type = "III")
m.temp
# Test post-hoc Tukey
m.temp <- Anova(modelos_p[[n]], type = "III")
m.temp
for (n in c(1:9)) { ### PIE
i <- colnames(select(data_1, -GPx)[c(7:15)])[[n]]
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Pie") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey # Aqui tengo que añadir la interaccion
m.temp <- Anova(modelos_p[[n]], type = "III")
if (((m.temp[["Pr(>F)"]][3]) <= 0.05) |  ((m.temp[["Pr(>F)"]][4]) <= 0.05)){
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
# EN EL CASO DE MDA_p hacemos test de fisher porque tukey no detecta diferencias
if(n == 9){
fisher.loop <- LSD.test(modelos_p[[n]], c("cultivo", "playa"))
(letras <- rownames_to_column(as.data.frame(fisher.loop$groups)))
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1),
tukey = case_when(groups == "a" ~ "b",
groups == "b" ~ "a",
TRUE ~ "ab")) %>%  select(-MDA, -rowname, -groups)
}
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "", "", "")
}
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((m.temp[["Pr(>F)"]][2]) <= 0.05){
diferencias  <-  TRUE
prob <- m.temp[["Pr(>F)"]][2]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
if(diferencias) {p <- p + annotate("segment", x = 0.75, xend = 2.25, y =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 0.75, xend = 0.75, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 2.25, xend = 2.25, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("text", x = 1.5, y = 1.18 * (max(tabla_summ$media) + max(tabla_summ$error)), label = significacion, size = 7)} # Si hubo diferencias, añade elementos a la grafica
# Guardamos graficas
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Column))", size = 5, color = "gray30", parse = T))
ggsave(paste0("./resultados/1/", i, "_pie_v2.png"), width = 340, height = 510, units = "px", scale = 2, dpi = "retina")
} # PIE
# Test post-hoc Tukey
m.temp <- Anova(modelos_p[[n]], type = "III")
m.temp
n <- 6
# Test post-hoc Tukey
m.temp <- Anova(modelos_p[[n]], type = "III")
m.temp
# Test post-hoc Tukey
m.temp <- Anova(modelos_t[[n]], type = "III")
m.temp
