(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
saveRDS(pt, file = paste0("./resultados/graficas2025/contabla/", i, ".rds"))}
}
plots <- sapply(colnames(data_2[5:31])[-c(5,6)], function(x){readRDS(paste0("./resultados/graficas2025/contabla/", x, ".rds"))})
(pSOD <- wrap_plots(plots[1:2]) +
labs(title = "SOD activity") +
theme(plot.title = element_text(hjust = -3.07))) # -2.4 left aligned
(pSOD <- wrap_plots(plots[1:2]) +
labs(title = "SOD activity") +
theme(plot.title = element_text(hjust = 0))) # -2.4 left aligned
(pSOD <- wrap_plots(plots[1:2]) +
labs(title = "SOD activity") +
theme(plot.title = element_text(hjust = 0))) # -2.4 left aligned
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
(pSOD <- wrap_plots(plots[1:2]) +
labs(title = "SOD activity"))
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(
title = 'SOD activity'))
(pSOD <- wrap_plots(plots[1:2])+
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 8)))
(pSOD <- wrap_plots(plots[1:2])+
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 10)))
(pSOD <- wrap_plots(plots[1:2])+
plot_annotation(tag_levels = c("A", "1")) &
theme(plot.tag = element_text(size = 10)))
(pSOD <- wrap_plots(plots[1:2]) +
plot_layout(tag_level = 'new') +
plot_annotation(tag_levels = c("A", "1")) &
theme(plot.tag = element_text(size = 10)))
list(c('#', '&'), '1')
c("A.1", "A.2", "B.1", "B.2")
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = c("A.1", "A.2", "B.1", "B.2")) +
theme(plot.tag = element_text(size = 10)))
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("A.1", "A.2", "B.1", "B.2"))) +
theme(plot.tag = element_text(size = 10)))
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("A", "", "B", ""))) +
theme(plot.tag = element_text(size = 10)))
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("Column", "", "Tentacle", ""))) +
theme(plot.tag = element_text(size = 10)))
#theme(plot.title = element_text(hjust = 0))) # -2.4 left aligned
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("Column", "", "Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 10),
plot.title = element_text(size = 12)))
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 10),
plot.title = element_text(size = 12)))
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
barras_tfg <- function(){
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
str_detect(i, "proteina") == TRUE  ~ " protein mg / ml",
str_detect(i, "MDA") == TRUE ~ "μM  MDA",
str_detect(i, "TEAC") == TRUE ~ "Trolox equivalent μM",
str_detect(i, "Lisozima") == TRUE ~ "ng/mg of protein Eq. HEWL",
str_detect(i, "Mielo") == TRUE ~ "mU * 10^2 / mg  of protein",
any(str_detect(i, c("GST", "DTD", "GR", "GPx", "Facida", "Fbasica"))) == T ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab(NULL) + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "bottom",
plot.tag.position = c(0.7, 0.95),
legend.title = element_blank())
}
for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
saveRDS(pt, file = paste0("./resultados/graficas2025/contabla/", i, ".rds"))}
}
plots <- sapply(colnames(data_2[5:31])[-c(5,6)], function(x){readRDS(paste0("./resultados/graficas2025/contabla/", x, ".rds"))})
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 10),
plot.title = element_text(size = 12)))
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
barras_tfg <- function(){
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
str_detect(i, "proteina") == TRUE  ~ " protein mg / ml",
str_detect(i, "MDA") == TRUE ~ "μM  MDA",
str_detect(i, "TEAC") == TRUE ~ "Trolox equivalent μM",
str_detect(i, "Lisozima") == TRUE ~ "ng/mg of protein Eq. HEWL",
str_detect(i, "Mielo") == TRUE ~ "mU * 10^2 / mg  of protein",
any(str_detect(i, c("GST", "DTD", "GR", "GPx", "Facida", "Fbasica"))) == T ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab(NULL) + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "bottom",
plot.tag.position = c(0.72, 0.95),
legend.title = element_blank())
}
barras_tfg <- function(){
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
str_detect(i, "proteina") == TRUE  ~ " protein mg / ml",
str_detect(i, "MDA") == TRUE ~ "μM  MDA",
str_detect(i, "TEAC") == TRUE ~ "Trolox equivalent μM",
str_detect(i, "Lisozima") == TRUE ~ "ng/mg of protein Eq. HEWL",
str_detect(i, "Mielo") == TRUE ~ "mU * 10^2 / mg  of protein",
any(str_detect(i, c("GST", "DTD", "GR", "GPx", "Facida", "Fbasica"))) == T ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab(NULL) + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "bottom",
plot.tag.position = c(0.74, 0.95),
legend.title = element_blank())
}
for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
saveRDS(pt, file = paste0("./resultados/graficas2025/contabla/", i, ".rds"))}
}
### Construccion de figuras con patchwork ----
plots <- sapply(colnames(data_2[5:31])[-c(5,6)], function(x){readRDS(paste0("./resultados/graficas2025/contabla/", x, ".rds"))})
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 10),
plot.title = element_text(size = 12)))
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 9),
plot.title = element_text(size = 12)))
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
saveRDS(pt, file = paste0("./resultados/graficas2025/contabla/", i, ".rds"))}
}
### Construccion de figuras con patchwork ----
plots <- sapply(colnames(data_2[5:31])[-c(5,6)], function(x){readRDS(paste0("./resultados/graficas2025/contabla/", x, ".rds"))})
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 9),
plot.title = element_text(size = 12)))
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
#PROBABLEMENTE PUEDO QUITAR ESTO
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
saveRDS(pt, file = paste0("./resultados/graficas2025/contabla/", i, ".rds"))}
}
### Construccion de figuras con patchwork ----
plots <- sapply(colnames(data_2[5:31])[-c(5,6)], function(x){readRDS(paste0("./resultados/graficas2025/contabla/", x, ".rds"))})
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 10),
plot.title = element_text(size = 12)))
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
barras_tfg <- function(){
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
str_detect(i, "proteina") == TRUE  ~ " protein mg / ml",
str_detect(i, "MDA") == TRUE ~ "μM  MDA",
str_detect(i, "TEAC") == TRUE ~ "Trolox equivalent μM",
str_detect(i, "Lisozima") == TRUE ~ "ng/mg of protein Eq. HEWL",
str_detect(i, "Mielo") == TRUE ~ "mU * 10^2 / mg  of protein",
any(str_detect(i, c("GST", "DTD", "GR", "GPx", "Facida", "Fbasica"))) == T ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab(NULL) + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "bottom",
plot.tag.position = c(0.8, 0.95),
legend.title = element_blank())
}
for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
#PROBABLEMENTE PUEDO QUITAR ESTO
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
saveRDS(pt, file = paste0("./resultados/graficas2025/contabla/", i, ".rds"))}
}
### Construccion de figuras con patchwork ----
plots <- sapply(colnames(data_2[5:31])[-c(5,6)], function(x){readRDS(paste0("./resultados/graficas2025/contabla/", x, ".rds"))})
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 10),
plot.title = element_text(size = 12)))
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/contabla/_SOD.eps", width = 200, height = 150, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/contabla/_SOD.eps", width = 200, height = 150, units = "mm", dpi = 1000, device = cairo_ps)
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/contabla/_SOD.eps", width = 200, height = 150, units = "mm", dpi = 1000, device = cairo_ps)
ggsave("./resultados/graficas2025/finales/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/_SOD.eps", width = 200, height = 150, units = "mm", dpi = 1000, device = cairo_ps)
ggsave("./resultados/graficas2025/finales/_SOD.png", width = 140, height = 105, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/_SOD.eps", width = 140, height = 105, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
ggsave("./resultados/graficas2025/finales/_SOD.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/_SOD.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
90*150/200
30*150/200
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/_SOD.png", width = 140, height = 105, units = "mm", dpi = 1000)
table_maker <- function(){
t <- anova_results %>% as_tibble() %>%
filter(variable == i) %>%
select(-variable, -DFn, -DFd, -p, -`p<.05`, -ges) %>%
mutate(sign. = case_when(
p.adj <= 0.001 ~ "***",
p.adj <= 0.01 ~ "**",
p.adj <= 0.05 ~ "*",
TRUE ~ "ns"),
p.adj = trunc(p.adj*10^4)/10^4) %>%
gt() %>%
cols_label(
Effect = md("**Effect**"),
`F` = md("**F statistic**"),
p.adj = md("**p value**"),
sign. = md("")) %>%
tab_header(title = md("Two-way ANOVA Table")) %>%
tab_options(
heading.title.font.size = "medium",
#column_labels.font.weight = "bold",
table.font.size = "small",
column_labels.font.size = "small") %>%
tab_style(
style = cell_text(color = "red3", weight = "normal"),
locations = cells_body(
columns = p.adj,
rows = p.adj <= 0.05))
return(t)
} # My beautiful beautiful daughter Table_maker()
(pSOD <- wrap_plots(plots[1:2]) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/_SOD.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/_SOD.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
c(pots[2], plots[1])
c(plots[2], plots[1])
# SOD
(pSOD <- wrap_plots(c(plots[2], plots[1])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/_SOD.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/_SOD.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
View(data_2)
# CAT
(pCAT <- wrap_plots(c(plots[4], plots[3])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
# CAT
(pCAT <- wrap_plots(c(plots[4], plots[3])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "CAT activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
# CAT
(pCAT <- wrap_plots(c(plots[4], plots[3])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "CAT activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/_CAT.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/_CAT.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# SOD
(pSOD <- wrap_plots(c(plots[2], plots[1])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/1SOD.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/1SOD.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# CAT
(pCAT <- wrap_plots(c(plots[4], plots[3])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "CAT activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/2CAT.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/2CAT.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# SOD
(pSOD <- wrap_plots(c(plots[2], plots[1])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "SOD activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/1_SOD.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/1_SOD.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# CAT
(pCAT <- wrap_plots(c(plots[4], plots[3])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "CAT activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/2_CAT.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/2_CAT.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
plots
# GR
(pCAT <- wrap_plots(c(plots[6], plots[5])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "GR activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/3_GR.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/3_GR.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# GST
(pGST <- wrap_plots(c(plots[7], plots[8])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "GST activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/4_GST.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/4_GST.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# DTD
(pDTD <- wrap_plots(c(plots[9], plots[10])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "DTD activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/5_DTD.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/5_DTD.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# DTD
(pDTD <- wrap_plots(c(plots[10], plots[9])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "DTD activity") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/5_DTD.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/5_DTD.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# TEAC
(pTEAC <- wrap_plots(c(plots[15], plots[16])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "Total antioxidant capacity (TEAC)") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/6_TEAC.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/6_TEAC.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# MDA
(pMDA <- wrap_plots(c(plots[17], plots[18])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "Malondialdehyde concentration") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/7_MDA.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/7_MDA.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# F. Acida
(pAP <- wrap_plots(c(plots[19], plots[20])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "Acid Phosphatase") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/8_AP.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/7_AP.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# F. Acida
(pAP <- wrap_plots(c(plots[19], plots[20])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "Acid Phosphatase") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/8_AP.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/8_AP.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# F. Alcalina
(pAlP <- wrap_plots(c(plots[22], plots[21])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "Alkaline Phosphatase") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/9_AlP.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/9_AlP.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
# Mieloperoxidasa
(pMPx <- wrap_plots(c(plots[24], plots[23])) +
plot_annotation(tag_levels = list(c("A. Column", "", "B. Tentacle", "")),
title = "Mieloperoxidase") +
theme(plot.tag = element_text(size = 7),
plot.title = element_text(size = 10, )))
ggsave("./resultados/graficas2025/finales/10_MPx.png", width = 190, height = 142.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/finales/10_MPx.eps", width = 190, height = 142.5, units = "mm", dpi = 1000, device = cairo_ps) # Para la revista
