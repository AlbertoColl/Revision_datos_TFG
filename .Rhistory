datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
# Obtencion de variables dummy a partir del sexo
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
# Escalo las variables numericas y las nuevas variables dummies, omito la variable sexo
datos_scl <- scale(datos[2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
datos$ac1 <- cutree(ac1, k = 4) # aqui guardar en el dataset resultados del ac1
# pca
cp_cor <- cor(datos[,2:6])
det(cp_cor)
library(MVN)
mvn(datos[,2:6], mvnTest = "mardia") # no hay normalidad
KMO(cp_cor)
summary(cp)
cp$sdev
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(2, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(4, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
datos$ac1 <- cutree(ac1, k = 5) # aqui guardar en el dataset resultados del ac1
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
datos$ac1 <- cutree(ac1, k = 6) # aqui guardar en el dataset resultados del ac1
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(factoextra)
library(psych)
library(patchwork)
library(viridis)
rect.hclust(ac1, 5)
datos_scl <- scale(datos[2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 5)
datos$ac1 <- cutree(ac1, k = 5)
View(datos)
datos[,283]
datos[283]
datos[283,]
datos_scl[283,]
datos_scl[-283,]
datos_scl <- datos_scl[-283,]
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
datos_scl <- scale(datos[-283,2:6])
datos_scl <- datos_scl[-283,]
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
datos_scl <- scale(datos[,2:6])
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
# pca
cp_cor <- cor(datos[,2:6])
det(cp_cor)
library(MVN)
mvn(datos[,2:6], mvnTest = "mardia") # no hay normalidad
KMO(cp_cor)
cp <- princomp(datos[2:6], cor=TRUE)
summary(cp)
cp$sdev
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3)
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3 begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
### Exploración y limpieza ----
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
# Obtencion de variables dummy a partir del sexo
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
### Clustering jerarquico ----
# Escalo las variables numericas y las nuevas variables dummies, omito la variable sexo
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 6)
datos$ac1 <- cutree(ac1, k = 6) # aqui guardar en el dataset resultados del ac1
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
head(penguins)
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
6
6
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 3)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
### Exploración y limpieza ----
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
# Obtencion de variables dummy a partir del sexo
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
### Clustering jerarquico ----
# Escalo las variables numericas y las nuevas variables dummies, omito la variable sexo
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 3)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
datos$ac2 <- ac2$cluster
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Segun este método, deberiamos escoger 4 clusters
set.seed(99)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(99)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
### SETUP ----
library(tidyverse)
library(multcompView)
library(car)
library(rstatix)
library(tidyverse)
library(multcompView)
library(car)
library(rstatix)
library(ggpubr)
library(ggthemr)
install.packages("ggthemr")
devtools::install_github('Mikata-Project/ggthemr')
library(devtools)
install.packages("devtools")
devtools::install_github('Mikata-Project/ggthemr')
install.packages("gt")
install.packages("patchwork")
library(tidyverse)
library(multcompView)
library(car)
library(rstatix)
library(gt)
library(patchwork)
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
source(file = "./scripts septiembre 2024-2025/0_data_lab.R")
source(file = "./scripts septiembre 2024-2025/1_funciones_graficas.R")
# Filtrar: solo anemonas cultivadas
data_2 <- filter(datos, cultivo == "cultured")
# Se eliminan:
data_2$SOD_t[7] <- NA
data_2$SOD_t[3] <- NA
data_2$CAT_t[35] <- NA # La funcion ha identificado otro, pero su eliminacion no afecta a la normalidad de residuos, este si.
data_2$Mielo_p[26] <- NA
data_2$Mielo_t[18] <- NA #Sospechoso, y afecta a normalidad
data_2$Facida_p[30] # sospechoso, outlier no extremo
data_2$Fbasica_p[12] <- NA # outlier extremo
data_2$Fbasica_t[9] <- NA # Afecta a homocedasticidad
data_2$Lisozima_p[33] <- NA # outlier extremo
data_2$Lisozima_p[34] <- NA # outlier extremo
data_2$Lisozima_p[2] <- NA # outlier extremo
ggplot(data_2, aes(y = Fbasica_p)) +
geom_boxplot(aes(x = time:section, color = time:section), alpha = 0) +
geom_point(aes(x = time:section, color = time:section), alpha = 1, size = 2)
ggplot(data_2, aes(y = Facida_p)) +
geom_boxplot(aes(x = time:section, color = time:section), alpha = 0) +
geom_point(aes(x = time:section, color = time:section), alpha = 1, size = 2)
# Ajuste de modelos ANOVA con rstatix
modelos <- lapply(colnames(data_2[c(5:31)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ section * time")), data_2)})
(anova_results <- reduce(modelos, full_join) %>%
add_column(.before = 1, variable = rep(colnames(data_2[c(5:31)]), each = 3)) %>%
adjust_pvalue(method = "BH"))
# Test de Levene se computa exactamente igual
modelos_levene <- lapply(colnames(data_2[c(5:31)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ section * time")), data_2)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_2[c(5:31)])))
modelos_lm <- lapply(colnames(data_2[c(5:31)]), function(x){
lm(formula = as.formula(paste0(x, " ~ section * time")), data_2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_2[c(5:31)])))
posthoc_tree <- function(){
letras <- c("", "", "", "")
pvalues <- filter(as_tibble(anova_results), variable == i)$p.adj
if (any(pvalues <= 0.05, na.rm = T)){
if (pvalues[3] <= 0.05){
t.results <-data_2 %>%
group_by(time) %>%
t_test(as.formula(paste0(i, " ~ section")), p.adjust.method = "BH")
if(t.results[1,]$p <= 0.05){
letras[c(1,3)] <- case_when(
tabla_summ[1,]$mean < tabla_summ[3,]$mean ~ c("", "*"),
tabla_summ[1,]$mean > tabla_summ[3,]$mean ~ c("*", ""))}
if(t.results[2,]$p <= 0.05){
letras[c(2,4)] <- case_when(
tabla_summ[2,]$mean < tabla_summ[4,]$mean ~ c("", "*"),
tabla_summ[2,]$mean > tabla_summ[4,]$mean ~ c("*", ""))}
#Se pueden añadir tiers con case_when()
print("Interacion is significant. Grouped t-test performed.")
return(letras)
}
else{
print("Interaction is not significative")
letras <- case_when(
pvalues[1] <= 0.05 & pvalues[2] <= 0.05 ~ c("b", "a", "c", "b"),
pvalues[1] <= 0.05 & tabla_summ[1,]$mean < tabla_summ[3,]$mean ~ c("a", "a", "b", "b"),
pvalues[1] <= 0.05 & tabla_summ[1,]$mean > tabla_summ[3,]$mean~ c("b", "b", "a", "a"),
pvalues[2] <= 0.05 & tabla_summ[1,]$mean < tabla_summ[2,]$mean ~ c("a", "b", "a", "b"),
pvalues[2] <= 0.05 & tabla_summ[1,]$mean > tabla_summ[2,]$mean~ c("b", "a", "b", "a"))
print("Interacion is not significant. Simple main effects computed.")
return(letras)}}
else{
print("There is no significative effects")
return(letras)}
}
table_maker <- function(){
t <- anova_results %>% as_tibble() %>%
filter(variable == i) %>%
select(-variable, -DFn, -DFd, -p, -`p<.05`, -ges) %>%
mutate(sign. = case_when(
p.adj <= 0.001 ~ "***",
p.adj <= 0.01 ~ "**",
p.adj <= 0.05 ~ "*",
TRUE ~ "ns")) %>%
gt() %>%
cols_label(
Effect = md("**Effect**"),
`F` = md("**F statistic**"),
p.adj = md("**p value**"),
sign. = md("")) %>%
tab_header(title = md("Two-way ANOVA Table"))
return(t)
}
View(data_2)
n <- 2
i <- colnames(data_2[5:31])[[n]]
n <- 3
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
pvalues <- filter(as_tibble(anova_results), variable == i)$p.adj
letras <- c("", "", "", "")
(any(pvalues <= 0.05, na.rm = T))
(pvalues[3] <= 0.05)
t.results <-data_2 %>%
group_by(time) %>%
t_test(as.formula(paste0(i, " ~ section")), p.adjust.method = "BH")
View(t.results)
0.000274
t.results[1]
t.results[1,]
t.results[1,]$p
t.results[2,]$p
n <- 10
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
pvalues <- filter(as_tibble(anova_results), variable == i)$p.adj
(any(pvalues <= 0.05, na.rm = T))
(pvalues[3] <= 0.05)
t.results <-data_2 %>%
group_by(time) %>%
t_test(as.formula(paste0(i, " ~ section")), p.adjust.method = "BH")
View(t.results)
n <- 11
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
pvalues <- filter(as_tibble(anova_results), variable == i)$p.adj
(any(pvalues <= 0.05, na.rm = T))
(pvalues[3] <= 0.05)
t.results <-data_2 %>%
group_by(time) %>%
t_test(as.formula(paste0(i, " ~ section")), p.adjust.method = "BH")
n <- 26
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
pvalues <- filter(as_tibble(anova_results), variable == i)$p.adj
(any(pvalues <= 0.05, na.rm = T))
(pvalues[3] <= 0.05)
t.results <-data_2 %>%
group_by(time) %>%
t_test(as.formula(paste0(i, " ~ section")), p.adjust.method = "BH")
