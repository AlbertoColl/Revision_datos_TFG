fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(plot_1 <- p_ac2 + p_ac1 + p_sp)
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, alpha = 0.8, begin = 0.1), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, alpha = 0.8, begin = 0), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, alpha = 0.8, begin = 0.2), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, alpha = 0.8, begin = 0.2, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.2, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.2, end = 0.9), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.15, end = 0.85), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(plot_1 <- p_ac2 + p_ac1 + p_sp)
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(factoextra)
library(patchwork)
library(viridis)
head(penguins)
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(factoextra)
library(patchwork)
library(viridis)
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
head(datos)
ggplot(datos, x = bill_length_mm) + geom_boxplot()
ggplot(datos, y = bill_length_mm) + geom_boxplot()
ggplot(datos, y = bill_length_mm, x = species) + geom_boxplot()
ggplot(datos, aes(y = bill_length_mm)) + geom_boxplot()
ggplot(datos, aes(y = bill_length_mm)) + geom_boxplot(alpha = 0, color = "#54B65D") + geom_point(color = "#54B65D")
ggplot(datos, aes(y = bill_length_mm)) + geom_boxplot(alpha = 0, color = "#54B65D") + geom_point(aes(x = bill_length_mm), color = "#54B65D")
ggplot(datos, aes(y = bill_length_mm)) + geom_boxplot(alpha = 0, color = "#54B65D")
ggplot(datos, aes(y = bill_length_mm)) + geom_boxplot(alpha = 0.2, fill = "#54B65D", color = "#54B65D")
ggplot(datos, aes(y = bill_length_mm)) + geom_histogram(alpha = 0.2, fill = "#54B65D", color = "#54B65D")
ggplot(datos, aes(x = bill_length_mm)) + geom_histogram(alpha = 0.2, fill = "#54B65D", color = "#54B65D")
ggplot(datos, aes(x = bill_length_mm)) + geom_histogram(alpha = 0.2, fill = "#54B65D", color = "#54B65D", bins = 15)
ggplot(datos, aes(x = bill_depth_mm)) + geom_histogram(alpha = 0.2, fill = "#0c8890", color = "#0c8890")
ggplot(datos, aes(x = bill_depth_mm)) + geom_histogram(alpha = 0.2, fill = "#0c8890", color = "#0c8890")
ggplot(datos, aes(x = flipper_length_mm)) + geom_histogram(alpha = 0.2, fill = "#E56A1C", color = "#E56A1C")
ggplot(datos, aes(x = body_mass_g)) + geom_histogram(alpha = 0.2, fill = "#FBBC4C", color = "#FBBC4C")
(p1 + p2) + (p3 + p4)
p1 <- ggplot(datos, aes(x = bill_length_mm)) + geom_histogram(alpha = 0.2, fill = "#54B65D", color = "#54B65D")
p1 <- ggplot(datos, aes(x = bill_length_mm)) + geom_histogram(alpha = 0.2, fill = "#54B65D", color = "#54B65D")
p2 <- ggplot(datos, aes(x = bill_depth_mm)) + geom_histogram(alpha = 0.2, fill = "#0c8890", color = "#0c8890")
p3 <- ggplot(datos, aes(x = flipper_length_mm)) + geom_histogram(alpha = 0.2, fill = "#E56A1C", color = "#E56A1C")
p4 <- ggplot(datos, aes(x = body_mass_g)) + geom_histogram(alpha = 0.2, fill = "#FBBC4C", color = "#FBBC4C")
(p1 + p2) + (p3 + p4)
(p1 + p2) / (p3 + p4)
(p1 + p2) / (p3 + p4) + labs(title = "Distribución de las variables cuantitativas de interes")
(p1 + p2) / (p3 + p4) & labs(title = "Distribución de las variables cuantitativas de interes")
(p1 + p2) / (p3 + p4) + labs(title = "Distribución de las variables cuantitativas de interes")
(p1 + p2) / (p3 + p4) + labs(title = "Distribución de las variables cuantitativas de interes")
(p1 + p2) / (p3 + p4) + title("Distribución de las variables cuantitativas de interes")
(p1 + p2) / (p3 + p4) + labs(title = "Distribución de las variables cuantitativas de interes")
(p1 + p2) / (p3 + p4) & theme_minimal()
library(tidyverse)
library(palmerpenguins)
library(factoextra)
library(patchwork)
library(viridis)
head(penguins)
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
### Exploración y limpieza ----
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
# Obtencion de variables dummy a partir del sexo
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
# Escalo las variables numericas y las nuevas variables dummies, omito la variable sexo
datos_scl <- scale(datos[2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
datos$ac1 <- cutree(ac1, k = 4) # aqui guardar en el dataset resultados del ac1
# pca
cp_cor <- cor(datos[,2:6])
det(cp_cor)
library(MVN)
mvn(datos[,2:6], mvnTest = "mardia") # no hay normalidad
KMO(cp_cor)
summary(cp)
cp$sdev
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(2, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(4, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
datos$ac1 <- cutree(ac1, k = 5) # aqui guardar en el dataset resultados del ac1
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
datos$ac1 <- cutree(ac1, k = 6) # aqui guardar en el dataset resultados del ac1
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(palmerpenguins)
library(factoextra)
library(psych)
library(patchwork)
library(viridis)
rect.hclust(ac1, 5)
datos_scl <- scale(datos[2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 5)
datos$ac1 <- cutree(ac1, k = 5)
View(datos)
datos[,283]
datos[283]
datos[283,]
datos_scl[283,]
datos_scl[-283,]
datos_scl <- datos_scl[-283,]
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
datos_scl <- scale(datos[-283,2:6])
datos_scl <- datos_scl[-283,]
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
datos_scl <- scale(datos[,2:6])
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
# pca
cp_cor <- cor(datos[,2:6])
det(cp_cor)
library(MVN)
mvn(datos[,2:6], mvnTest = "mardia") # no hay normalidad
KMO(cp_cor)
cp <- princomp(datos[2:6], cor=TRUE)
summary(cp)
cp$sdev
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3)
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3 begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
### Exploración y limpieza ----
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
# Obtencion de variables dummy a partir del sexo
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
### Clustering jerarquico ----
# Escalo las variables numericas y las nuevas variables dummies, omito la variable sexo
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 6)
datos$ac1 <- cutree(ac1, k = 6) # aqui guardar en el dataset resultados del ac1
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
head(penguins)
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
6
6
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 3)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos <- select(penguins, species, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex)
### Exploración y limpieza ----
boxplot(datos[2:5]) # No parece que haya datos anómalos a simple vista
# Transformacion de la variable sexo en factor
datos$sex <- as.factor(datos$sex)
summary(datos$sex)
# Eliminamos filas que contengan NAs
datos <- drop_na(datos)
# Obtencion de variables dummy a partir del sexo
datos <- datos %>% mutate(sexo_MALE = ifelse(sex == "male", T, F)) %>%
select(-sex)
### Clustering jerarquico ----
# Escalo las variables numericas y las nuevas variables dummies, omito la variable sexo
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos_scl <- scale(datos[,2:6])
# Matriz de distancias
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
# Quitamos dato 283 que no agrupa bien
datos <- datos[-283,]
datos_scl <- scale(datos[,2:6])
distancia <- dist(datos_scl)
ac1 <- hclust(distancia)
plot(ac1, main = "Clúster sobre especies de pingüinos", cex = 0.7)
rect.hclust(ac1, 3)
datos$ac1 <- cutree(ac1, k = 3) # aqui guardar en el dataset resultados del ac1
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 3)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 4)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
datos$ac2 <- ac2$cluster
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.25, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Segun este método, deberiamos escoger 4 clusters
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
# Segun este método, deberiamos escoger 4 clusters
set.seed(99)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
ac2
fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 5)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(5, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(999)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
p_scree <- fviz_nbclust(scale(datos[2:6]), kmeans, "wss")
set.seed(99)
ac2 <- kmeans(as.matrix(scale(datos[2:6])), 6)
p_cluster <- fviz_cluster(ac2, scale(datos[2:6]), ellipse.type = "norm")
datos$ac2 <- ac2$cluster
(p_scree | p_cluster) & theme_minimal()
(p_sp <- fviz_pca_biplot(cp, habillage=as.factor(datos$species),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, alpha = 0.6, begin = 0.1, end = 0.7, option = "G"), col.var = "mediumvioletred") + labs(title ="Especies de pingüinos"))
(p_ac1 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac1),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(3, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering jerárquico"))
(p_ac2 <- fviz_pca_biplot(cp, habillage=as.factor(datos$ac2),
addEllipses=TRUE, ellipse.level=0.95, palette = viridis(6, begin = 0.35, end = 0.8), col.var = "mediumvioletred") + labs(title ="Clustering no jerárquico (k-means)"))
### SETUP ----
library(tidyverse)
library(multcompView)
library(car)
library(rstatix)
library(tidyverse)
library(multcompView)
library(car)
library(rstatix)
library(ggpubr)
#setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
setwd("D:/collf/Documents/GitHub/Revision_datos_TFG")
source(file = "./scripts septiembre 2024-2025/0_data_lab.R")
source(file = "./scripts septiembre 2024-2025/1_funciones_graficas.R")
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
source(file = "./scripts septiembre 2024-2025/0_data_lab.R")
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
library(tidyverse)
library(multcompView)
library(car)
library(rstatix)
library(ggpubr)
library(tidyverse)
library(multcompView)
library(car)
library(rstatix)
library(ggpubr)
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
source(file = "./scripts septiembre 2024-2025/0_data_lab.R")
source(file = "./scripts septiembre 2024-2025/1_funciones_graficas.R")
# Filtrar: solo anemonas cultivadas
data_2 <- filter(datos, cultivo == "cultured")
data_2_long <- data_2 %>% pivot_longer(!c(individuo, playa, corte, cultivo, tiempo), names_to = "variable", values_to = "valor", values_drop_na = TRUE)
data_2_long <- filter(data_2_long, variable != "GPx_t")
data_2_long <- filter(data_2_long, variable != "GPx_p")
# Asunciones del ANOVA
for (i in levels(data_2_long$variable)) {
modelo_completo  <- lm(valor ~ playa*corte*tiempo, data = filter(data_2_long, variable == i))
print(i)
print(shapiro_test(residuals(modelo_completo)))
print(data_2 %>% levene_test(get(i) ~ playa*corte*tiempo))
} # Solo GPx_p viola normalidad de residuos y aun asi es una enzima que se va a volver a medir o excluir del analisis.
data_2_long$variable <- as.factor(data_2_long$variable)
# Asunciones del ANOVA
for (i in levels(data_2_long$variable)) {
modelo_completo  <- lm(valor ~ playa*corte*tiempo, data = filter(data_2_long, variable == i))
print(i)
print(shapiro_test(residuals(modelo_completo)))
print(data_2 %>% levene_test(get(i) ~ playa*corte*tiempo))
} # Solo GPx_p viola normalidad de residuos y aun asi es una enzima que se va a volver a medir o excluir del analisis.
# Computamos los anovas agrupando por variable y aplicamos correción de BH
res.aov <- data_2_long %>% group_by(variable) %>% anova_test(valor ~ playa*corte*tiempo) %>% adjust_pvalue(method = "BH")
res.aov
# Grafica
tabla_summ <- data_2 %>%
group_by(playa, corte, tiempo) %>%
get_summary_stats(CAT_p, type = "mean_se")
(p.cat_p <- ggplot(sumstat_catp) +
geom_errorbar(aes(x = tiempo, ymax = mean + se, ymin = mean- se, color = corte), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1) +
geom_col(aes(x = tiempo, y = mean, color = corte, fill = corte), alpha = 0.4, linewidth = 1, position = "dodge2") +
facet_wrap(~playa))
(p.cat_p <- ggplot(tabla_summ) +
geom_errorbar(aes(x = tiempo, ymax = mean + se, ymin = mean- se, color = corte), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1) +
geom_col(aes(x = tiempo, y = mean, color = corte, fill = corte), alpha = 0.4, linewidth = 1, position = "dodge2") +
facet_wrap(~playa))
(p.cat_p <- ggplot(tabla_summ) +
geom_errorbar(aes(x = tiempo, ymax = mean + se, ymin = mean- se, color = corte), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1) +
geom_col(aes(x = tiempo, y = mean, color = corte, fill = corte), alpha = 0.4, linewidth = 1, position = "dodge2") +
facet_wrap(~playa))
objetos_ortimar <- list(res.aov)
objetos_ortimar <- objetos_ortimar %>% append(list(p.cat_p))
View(res.aov)
anova_test(data_2, CAT_p ~ playa + cor.test())
anova_test(data_2, CAT_p ~ playa + corte)
data_2 %>% anova_test(CAT_p ~ playa + corte) %>% tukey_hsd(CAT_p ~ playa)
tukey_hsd(data_2, CAT_p ~ playa + corte)
tukey_hsd(data_2, CAT_p ~ playa + corte + tiempo)
view(tukey_hsd(data_2, CAT_p ~ playa + corte + tiempo))
view(tukey_hsd(data_2, CAT_p ~ playa*corte)
)
view(tukey_hsd(data_2, CAT_p ~ playa*corte))
view(tukey_hsd(data_2, CAT_p ~ playa*corte*tiempo))
<- tukey_hsd(data_2, CAT_p ~ playa*corte*tiempo)
pwc <- tukey_hsd(data_2, CAT_p ~ playa*corte*tiempo)
p.cat_p + stat_pvalue_manual(pwc, hide.ns = TRUE) +
p.cat_p + stat_pvalue_manual(pwc, hide.ns = TRUE) +
stat_pvalue_manual(pwc, hide.ns = TRUE)
