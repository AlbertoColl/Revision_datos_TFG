for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))))
#labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "A",                                                 str_detect(i, "_t") == T ~ "B",                                                 TRUE ~ "")))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)}
}
table_maker <- function(){
t <- anova_results %>% as_tibble() %>%
filter(variable == i) %>%
select(-variable, -DFn, -DFd, -p, -`p<.05`, -ges) %>%
mutate(sign. = case_when(
p.adj <= 0.001 ~ "***",
p.adj <= 0.01 ~ "**",
p.adj <= 0.05 ~ "*",
TRUE ~ "ns"),
p.adj = trunc(p.adj*10^4)/10^4) %>%
gt() %>%
cols_label(
Effect = md("**Effect**"),
`F` = md("**F statistic**"),
p.adj = md("**p value**"),
sign. = md("")) %>%
tab_header(title = md("Two-way ANOVA Table")) %>%
tab_options(
heading.title.font.size = "medium",
#column_labels.font.weight = "bold",
table.font.size = "small",
column_labels.font.size = "medium") %>%
tab_style(
style = cell_text(color = "red3", weight = "normal"),
locations = cells_body(
columns = p.adj,
rows = p.adj <= 0.05))
return(t)
}
for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))))
#labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "A",                                                 str_detect(i, "_t") == T ~ "B",                                                 TRUE ~ "")))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)}
}
for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))))
#labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "A",                                                 str_detect(i, "_t") == T ~ "B",                                                 TRUE ~ "")))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
saveRDS(pt, file = paste0("./resultados/graficas2025/contabla/", i, ".rds"))}
}
plots <- lapply(colnames(datos[5:31]), function(x){readRDS(paste0("./resultados/graficas2025/contabla/", x, ".rds"))})
plots <- lapply(colnames(data_2[5:31]), function(x){readRDS(paste0("./resultados/graficas2025/contabla/", x, ".rds"))})
p.sodp <- readRDS("./resultados/graficas2025/contabla/SOD_p.rds")
p.sodp
p.catp <- readRDS("./resultados/graficas2025/contabla/CAT_p.rds")
(p.catp <- readRDS("./resultados/graficas2025/contabla/CAT_p.rds"))
plots <- sapply(colnames(data_2[5:31]), function(x){readRDS(paste0("./resultados/graficas2025/contabla/", x, ".rds"))})
colnames(data_2[5:31])
colnames(data_2[5:31])[-c(5,6)]
plots <- sapply(colnames(data_2[5:31])[-c(5,6)], function(x){readRDS(paste0("./resultados/graficas2025/contabla/", x, ".rds"))})
(pSOD <- wrap_plots(plots[1:2])
)
(pSOD <- wrap_plots(plots[1:2]) +
labs(title = "SOD activity") +
theme(plot.title = element_text(hjust = -3.07)))
for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(subtitle = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
saveRDS(pt, file = paste0("./resultados/graficas2025/contabla/", i, ".rds"))}
}
for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
saveRDS(pt, file = paste0("./resultados/graficas2025/contabla/", i, ".rds"))}
}
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
tag.position = plot.tag.position = c(1, 1),
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
tag.position = plot.tag.position = c(1, 1),
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
plot.tag.position = c(1, 1),
legend.title = element_blank())
barras_tfg <- function(){
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
plot.tag.position = c(1, 1),
legend.title = element_blank())
}
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
plot.tag.position = c(0.9, 0.9),
legend.title = element_blank())
barras_tfg <- function(){
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
plot.tag.position = c(0.9, 0.9),
legend.title = element_blank())
}
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
plot.tag.position = c(0.85, 0.85),
legend.title = element_blank())
barras_tfg <- function(){
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
plot.tag.position = c(0.85, 0.85),
legend.title = element_blank())
}
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
barras_tfg <- function(){
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
plot.tag.position = c(0.85, 0.95),
legend.title = element_blank())
}
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
barras_tfg <- function(){
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
plot.tag.position = c(0.9, 0.85),
legend.title = element_blank())
}
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
barras_tfg <- function(){
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
plot.tag.position = c(0.95, 0.85),
legend.title = element_blank())
}
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
barras_tfg <- function(){
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
plot.tag.position = c(0.9, 0.85),
legend.title = element_blank())
}
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
n <- 3
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
saveRDS(pt, file = paste0("./resultados/graficas2025/contabla/", i, ".rds"))}
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
saveRDS(pt, file = paste0("./resultados/graficas2025/contabla/", i, ".rds"))}
}
barras_tfg <- function(){
ggplot(tabla_summ) +
geom_errorbar(aes(x = time, ymax = mean + se, ymin = mean- se, color = tratamiento), width = 0.3, position = position_dodge(width = 0.9), linewidth = 1, show.legend = F) +
geom_col(aes(x = time, y = mean, color = tratamiento, fill = tratamiento), alpha = 0.4, linewidth = 1, position = "dodge2") +
geom_text(aes(x = time, y = mean + se, label = letras, group = tratamiento), color = "grey5", vjust=-0.8, size = ifelse("*" %in% tabla_summ$letras, 5.5, 3.5), fontface = "bold", , position = position_dodge(width = 0.9)) +
ylab(case_when(
i == "proteina_t" | i == "proteina_p"  ~ " protein mg / ml",
i == "MDA_t" | i == "MDA_p" ~ "μM  MDA",
i == "TEAC_t" | i == "TEAC_p"~ "Trolox equivalent μM",
i == "GST_t" | i == "GST_p" ~ "mU / mg  of protein",
i == "DTD_t" | i == "DTD_p" ~ "mU / mg  of protein",
i == "GR_t" | i == "GR_p" ~ "mU / mg  of protein",
i == "GPx_t" | i == "GPx_p" ~ "mU / mg  of protein",
TRUE ~ "U / mg  of protein")) +
xlab("Time point") + # Omitir?
scale_color_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_fill_manual(values = c("#49AB93","#F59300" ), labels = c("Control", "Sectioned") ) +
scale_x_discrete(labels = c("T0", "T1")) + #cambiar al apropiado
theme(legend.position = "top",
plot.tag.position = c(0.85, 0.85),
legend.title = element_blank())
}
for (n in c(1:27)) {
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(section:time) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`section:time`, ":", names = c("tratamiento", "time"), cols_remove=F)
if((n %% 2) != 0) {# Memoria del limite
limite_t = 1.3*(max(tabla_summ$mean) + max(tabla_summ$se))}
if (n != 5){tabla_summ$letras <- posthoc_tree()}
if (n != 5){
(p <- barras_tfg() +
ylim(c(0,
max(limite_t, (max(tabla_summ$mean) + max(tabla_summ$se))))) +
labs(tag = case_when(str_detect(i, "_p") == T  ~ "Column",                                                 str_detect(i, "_t") == T ~ "Tentacle",
TRUE ~ "")))
(t <- table_maker())
(pt <- p/wrap_table(t, panel = "full", space = "fixed"))
ggsave(paste0("./resultados/graficas2025/contabla/", i, ".png"), width = 100, height = 140, units = "mm", dpi = 1000)
saveRDS(pt, file = paste0("./resultados/graficas2025/contabla/", i, ".rds"))}
}
plots <- sapply(colnames(data_2[5:31])[-c(5,6)], function(x){readRDS(paste0("./resultados/graficas2025/contabla/", x, ".rds"))})
(pSOD <- wrap_plots(plots[1:2]) +
labs(title = "SOD activity") +
theme(plot.title = element_text(hjust = -3.07))) # -2.4 left aligned
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 180, height = 112.5, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 180, height = 225, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 180, height = 180, units = "mm", dpi = 1000)
ggsave("./resultados/graficas2025/contabla/_SOD.png", width = 200, height = 150, units = "mm", dpi = 1000)
