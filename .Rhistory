(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "", "", "")
}
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((summary(modelos_t[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05){
diferencias  <-  TRUE
prob <- summary(modelos_t[[n]])[[1]][["Pr(>F)"]][1]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
if(diferencias) {p <- p + annotate("segment", x = 0.75, xend = 2.25, y =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 0.75, xend = 0.75, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 2.25, xend = 2.25, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("text", x = 1.5, y = 1.18 * (max(tabla_summ$media) + max(tabla_summ$error)), label = significacion, size = 7)} # Si hubo diferencias, a単ade elementos a la grafica
# Guardamos graficas
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T) +
theme(legend.position = "right"))
ggsave(paste0("./resultados/1/", i, "_tent.png"), width = 540, height = 540, units = "px", scale = 2, dpi = "retina")
} # TENTACULO
for (n in c(1:9)) { ### PIE
i <- colnames(select(data_1, -GPx)[c(7:15)])[[n]]
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Pie") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey
if ((summary(modelos_p[[n]])[[1]][["Pr(>F)"]][2]) <= 0.05) {
m.full <- aov(get(i)~ cultivo * playa, data = filter(data_1, tejido == "Pie"))
tukey_loop <- TukeyHSD(m.full)
cld.tukey <- multcompLetters4(m.full, tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
# EN EL CASO DE MDA HACER OVERRIDE MANUAL porque tukey no detecta diferencias
if(n == 9){
letras$tukey <- c("b", "ab", "b", "ab", "a", "a")
tabla_summ <- merge(tabla_summ, letras)
} else{tabla_summ <- merge(tabla_summ, letras)}
} else {
tabla_summ$tukey <- c("", "", "", "", "", "")
}
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((summary(modelos_p[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05){
diferencias  <-  TRUE
prob <- summary(modelos_p[[n]])[[1]][["Pr(>F)"]][1]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
if(diferencias) {p <- p + annotate("segment", x = 0.75, xend = 2.25, y =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 0.75, xend = 0.75, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 2.25, xend = 2.25, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("text", x = 1.5, y = 1.18 * (max(tabla_summ$media) + max(tabla_summ$error)), label = significacion, size = 7)} # Si hubo diferencias, a単ade elementos a la grafica
# Guardamos graficas
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Column))", size = 5, color = "gray30", parse = T))
ggsave(paste0("./resultados/1/", i, "_pie.png"), width = 350, height = 525, units = "px", scale = 2, dpi = "retina")
} # PIE
for (n in c(1:9)) { ### TENTACULO
i <- colnames(select(data_1, -GPx)[c(7:15)])[[n]]
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Tentaculo") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey
if ((summary(modelos_t[[n]])[[1]][["Pr(>F)"]][2]) <= 0.05) {
m.full <- aov(get(i)~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo"))
tukey_loop <- TukeyHSD(m.full)
cld.tukey <- multcompLetters4(m.full, tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "", "", "")
}
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((summary(modelos_t[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05){
diferencias  <-  TRUE
prob <- summary(modelos_t[[n]])[[1]][["Pr(>F)"]][1]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
if(diferencias) {p <- p + annotate("segment", x = 0.75, xend = 2.25, y =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 0.75, xend = 0.75, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 2.25, xend = 2.25, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("text", x = 1.5, y = 1.18 * (max(tabla_summ$media) + max(tabla_summ$error)), label = significacion, size = 7)} # Si hubo diferencias, a単ade elementos a la grafica
# Guardamos graficas
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T) +
theme(legend.position = "right"))
ggsave(paste0("./resultados/1/", i, "_tent.png"), width = 525, height = 525, units = "px", scale = 2, dpi = "retina")
} # TENTACULO
for (n in c(1:9)) { ### PIE
i <- colnames(select(data_1, -GPx)[c(7:15)])[[n]]
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Pie") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey
if ((summary(modelos_p[[n]])[[1]][["Pr(>F)"]][2]) <= 0.05) {
m.full <- aov(get(i)~ cultivo * playa, data = filter(data_1, tejido == "Pie"))
tukey_loop <- TukeyHSD(m.full)
cld.tukey <- multcompLetters4(m.full, tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
# EN EL CASO DE MDA HACER OVERRIDE MANUAL porque tukey no detecta diferencias
if(n == 9){
letras$tukey <- c("b", "ab", "b", "ab", "a", "a")
tabla_summ <- merge(tabla_summ, letras)
} else{tabla_summ <- merge(tabla_summ, letras)}
} else {
tabla_summ$tukey <- c("", "", "", "", "", "")
}
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((summary(modelos_p[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05){
diferencias  <-  TRUE
prob <- summary(modelos_p[[n]])[[1]][["Pr(>F)"]][1]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
if(diferencias) {p <- p + annotate("segment", x = 0.75, xend = 2.25, y =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 0.75, xend = 0.75, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 2.25, xend = 2.25, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("text", x = 1.5, y = 1.18 * (max(tabla_summ$media) + max(tabla_summ$error)), label = significacion, size = 7)} # Si hubo diferencias, a単ade elementos a la grafica
# Guardamos graficas
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Column))", size = 5, color = "gray30", parse = T))
ggsave(paste0("./resultados/1/", i, "_pie.png"), width = 340, height = 510, units = "px", scale = 2, dpi = "retina")
} # PIE
for (n in c(1:9)) { ### TENTACULO
i <- colnames(select(data_1, -GPx)[c(7:15)])[[n]]
tabla_summ <- data_1 %>% # Generamos estadisticos de resumen
filter(tejido == "Tentaculo") %>%   group_by(cultivo, playa) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
# Test post-hoc Tukey
if ((summary(modelos_t[[n]])[[1]][["Pr(>F)"]][2]) <= 0.05) {
m.full <- aov(get(i)~ cultivo * playa, data = filter(data_1, tejido == "Tentaculo"))
tukey_loop <- TukeyHSD(m.full)
cld.tukey <- multcompLetters4(m.full, tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$`cultivo:playa`$Letters)))
colnames(letras) <- c("rowname", "tukey")
letras <- letras %>% mutate(
playa = lapply(strsplit(letras$rowname, ":"), `[[`, 2),
cultivo = lapply(strsplit(letras$rowname, ":"), `[[`, 1)
) %>% select(cultivo, playa, tukey)
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "", "", "", "")
}
# Evalua si hay diferencias sig en cultivo y guarda prob y nivel de significacion
if ((summary(modelos_t[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05){
diferencias  <-  TRUE
prob <- summary(modelos_t[[n]])[[1]][["Pr(>F)"]][1]
significacion = case_when((prob <= 0.05) & (prob > 0.01) ~ "*",
(prob <= 0.01) & (prob > 0.001) ~ "**",
(prob <= 0.001) ~ "***",)
} else{diferencias <- FALSE ; significacion <- ""}
(p <- barras_tfg())
if(diferencias) {p <- p + annotate("segment", x = 0.75, xend = 2.25, y =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend =  1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 0.75, xend = 0.75, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("segment", x = 2.25, xend = 2.25, y = 1.15 * (max(tabla_summ$media) + max(tabla_summ$error)), yend = 1.1 * (max(tabla_summ$media) + max(tabla_summ$error)), color = "gray40", size = 0.8) +
annotate("text", x = 1.5, y = 1.18 * (max(tabla_summ$media) + max(tabla_summ$error)), label = significacion, size = 7)} # Si hubo diferencias, a単ade elementos a la grafica
# Guardamos graficas
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T) +
theme(legend.position = "right"))
ggsave(paste0("./resultados/1/", i, "_tent.png"), width = 510, height = 510, units = "px", scale = 2, dpi = "retina")
} # TENTACULO
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./analisis 12-2023/0_data_lab.R")
source(file = "./analisis 12-2023/0_5_graficas.R")
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./analisis 12-2023/0_data_lab.R")
source(file = "./analisis 12-2023/0_5_graficas.R")
data_1 <- filter(datos, corte == "control") %>%
filter(cultivo == "wild" | madurez == "Si")
library(tidyverse)
library(car)
library(multcompView)
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./analisis 12-2023/0_data_lab.R")
source(file = "./analisis 12-2023/0_5_graficas.R")
data_2 <- filter(datos, cultivo == "Si") %>%
filter((corte == "dissected") | ((corte == "control") & (madurez == "No"))) %>%
mutate(tratamiento = case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2"))
data_2$tratamiento <- as.factor(data_2$tratamiento)
data_2 <- filter(datos, cultivo == "Si") %>%
filter((corte == "dissected") | ((corte == "control") & (madurez == "No"))) %>%
mutate(tratamiento = as.factor(case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2")))
summary(data_"")
summary(data_2)
View(data_2)
setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG") # Lab
source(file = "./analisis 12-2023/0_data_lab.R")
source(file = "./analisis 12-2023/0_5_graficas.R")
data_2 <- filter(datos, cultivo == "Si") %>%
filter((corte == "dissected") | ((corte == "control") & (madurez == "No"))) %>%
mutate(tratamiento = case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2"))
View(data_2)
data_2$tratamiento <- as.factor(data_2$tratamiento)
data_2 <- filter(datos, cultivo == "wild") %>%
filter((corte == "dissected") | ((corte == "control") & (madurez == "No"))) %>%
mutate(tratamiento = case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2"))
data_2 <- filter(datos, cultivo == "wild") %>%
filter((corte == "dissected") | ((corte == "control") & (madurez == "No"))) %>%
mutate(tratamiento = as.factor(case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2")))
summary(data_2)
View(data_2)
data_2 <- filter(datos, cultivo == "wild") %>%
filter((corte == "dissected") | ((corte == "control") & (madurez == "No"))) %>%
mutate(tratamiento = case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2"))
summary(data_2)
View(data_2)
data_2 <- filter(datos, cultivo == "cultured") %>%
filter((corte == "dissected") | ((corte == "control") & (madurez == "No"))) %>%
mutate(tratamiento = case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2"))
summary(data_2)
data_2$tratamiento <- as.factor(data_2$tratamiento)
summary(data_2)
data_2 <- filter(datos, cultivo == "cultured") %>%
filter((corte == "dissected") | ((corte == "control") & (madurez == "No"))) %>%
mutate(tratamiento = as.factor(case_when(corte == "control" ~ "control",
(corte == "dissected") & (madurez == "No") ~ "t1",
(corte == "dissected") & (madurez == "Si") ~ "t2")))
summary(data_2)
modelos_p <- lapply(colnames(data_2[c(7:16)]), function(x){
aov(formula = as.formula(paste0(x, " ~ tratamiento")), data = filter(data_2, tejido == "Pie"))})
modelos_p[[3]] <- aov(log(GPx) ~ tratamiento,data = filter(data_2, tejido == "Pie"))
modelos_p[[6]] <- aov(log(G6PDH) ~ tratamiento,data = filter(data_2, tejido == "Pie"))
modelos_t <- lapply(colnames(data_2[c(7:16)]), function(x){
aov(formula = as.formula(paste0(x, " ~ tratamiento")), data = filter(data_2, tejido == "Tentaculo"))})
modelos_t[[1]] <- aov(log(SOD) ~ tratamiento,data = filter(data_2, tejido == "Tentaculo"))
modelos_t[[2]] <- aov(log(CAT) ~ tratamiento,data = filter(data_2, tejido == "Tentaculo"))
modelos_t[[4]] <- aov(log(GR) ~ tratamiento,data = filter(data_2, tejido == "Tentaculo"))
modelos_t[[5]] <- aov(log(GST) ~ tratamiento,data = filter(data_2, tejido == "Tentaculo"))
sapply(modelos_p, function(x){
print(leveneTest(x))})
sapply(modelos_t, function(x){
print(leveneTest(x))})
### Evaluacion de modelos y test post hoc ----
for (i in c(1:10)) {
print(colnames(data_2[7:16][i]))
print(summary(modelos_p[[i]]))
}
for (i in c(1:10)) {
print(colnames(data_2[7:16][i]))
print(summary(modelos_t[[i]]))
}
# Bucle de estadisticos de resumen, test port-hoc y grafica
for (n in c(1:10)) { ### PIE
i <- colnames(data_2[7:16])[[n]]
tabla_summ <- data_2 %>%
filter(tejido == "Pie") %>%   group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos_p[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "")
}
(p <- barras_tfm())
ggsave(paste0("./analisis 12-2023/graficas/2/", i, "_pie.png"), width = 800, height = 1000, units = "px", scale = 2, dpi = "retina")
}
# Bucle de estadisticos de resumen, test port-hoc y grafica
for (n in c(1:10)) { ### PIE
i <- colnames(data_2[7:16])[[n]]
tabla_summ <- data_2 %>%
filter(tejido == "Pie") %>%   group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos_p[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "")
}
(p <- barras_tfm())
ggsave(paste0("./resultados/2/", i, "_pie.png"), width = 800, height = 1000, units = "px", scale = 2, dpi = "retina")
}
for (n in c(1:10)) { ### TENTACULO
i <- colnames(data_2[7:16])[[n]]
tabla_summ <- data_2 %>%
filter(tejido == "Tentaculo") %>%   group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos_t[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos_t[[n]])
cld.tukey <- multcompLetters4(modelos_t[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "")
}
(p <- barras_tfm())
ggsave(paste0("./resultados/2/", i, "_tent.png"), width = 800, height = 1000, units = "px", scale = 2, dpi = "retina")
(p <- barras_tfm())
(p <- barras_tfm())
(p <- barras_tfm())
(p <- p + annotate("text", x = 1.5, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T))
(p <- p + annotate("text", x = 2, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T))
(p <- barras_tfm())
(p <- p + annotate("text", x = 2, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T))
for (n in c(1:10)) { ### PIE
i <- colnames(data_2[7:16])[[n]]
tabla_summ <- data_2 %>%
filter(tejido == "Pie") %>%   group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos_p[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "")
}
(p <- barras_tfm())
(p <- p + annotate("text", x = 2, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T))  ggsave(paste0("./resultados/2/", i, "_pie.png"), width = 800, height = 1000, units = "px", scale = 2, dpi = "retina")
# Bucle de estadisticos de resumen, test port-hoc y grafica
for (n in c(1:10)) { ### PIE
i <- colnames(data_2[7:16])[[n]]
tabla_summ <- data_2 %>%
filter(tejido == "Pie") %>%   group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos_p[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "")
}
(p <- barras_tfm())
(p <- p + annotate("text", x = 2, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T))
ggsave(paste0("./resultados/2/", i, "_pie.png"), width = 800, height = 1000, units = "px", scale = 2, dpi = "retina")
}
for (n in c(1:10)) { ### TENTACULO
i <- colnames(data_2[7:16])[[n]]
tabla_summ <- data_2 %>%
filter(tejido == "Tentaculo") %>%   group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos_t[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos_t[[n]])
cld.tukey <- multcompLetters4(modelos_t[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "")
}
(p <- barras_tfm())
(p <- p + annotate("text", x = 2, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T))
ggsave(paste0("./resultados/2/", i, "_tent.png"), width = 800, height = 1000, units = "px", scale = 2, dpi = "retina")
}
for (n in c(1:10)) { ### PIE
i <- colnames(data_2[7:16])[[n]]
tabla_summ <- data_2 %>%
filter(tejido == "Pie") %>%   group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos_p[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "")
}
(p <- barras_tfm())
(p <- p + annotate("text", x = 2, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T))
ggsave(paste0("./resultados/2/", i, "_pie.png"), width = 800, height = 1000, units = "px", scale = 2, dpi = "retina")
}
for (n in c(1:10)) { ### PIE
i <- colnames(data_2[7:16])[[n]]
tabla_summ <- data_2 %>%
filter(tejido == "Pie") %>%   group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos_p[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "")
}
(p <- barras_tfm())
(p <- p + annotate("text", x = 2, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Column))", size = 5, color = "gray30", parse = T))
ggsave(paste0("./resultados/2/", i, "_pie.png"), width = 800, height = 1000, units = "px", scale = 2, dpi = "retina")
}
for (n in c(1:10)) { ### TENTACULO
i <- colnames(data_2[7:16])[[n]]
tabla_summ <- data_2 %>%
filter(tejido == "Tentaculo") %>%   group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos_t[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos_t[[n]])
cld.tukey <- multcompLetters4(modelos_t[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "")
}
(p <- barras_tfm())
(p <- p + annotate("text", x = 2, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T))
ggsave(paste0("./resultados/2/", i, "_tent.png"), width = 800, height = 1000, units = "px", scale = 2, dpi = "retina")
}
for (n in c(1:10)) { ### PIE
i <- colnames(data_2[7:16])[[n]]
tabla_summ <- data_2 %>%
filter(tejido == "Pie") %>%   group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos_p[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos_p[[n]])
cld.tukey <- multcompLetters4(modelos_p[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "")
}
(p <- barras_tfm())
(p <- p + annotate("text", x = 2, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Column))", size = 5, color = "gray30", parse = T))
ggsave(paste0("./resultados/2/", i, "_pie.png"), width = 400, height = 500, units = "px", scale = 2, dpi = "retina")
}
for (n in c(1:10)) { ### TENTACULO
i <- colnames(data_2[7:16])[[n]]
tabla_summ <- data_2 %>%
filter(tejido == "Tentaculo") %>%   group_by(tratamiento) %>%
summarise(media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i)))))
if ((summary(modelos_t[[n]])[[1]][["Pr(>F)"]][1]) <= 0.05) {
tukey_loop <- TukeyHSD(modelos_t[[n]])
cld.tukey <- multcompLetters4(modelos_t[[n]], tukey_loop, reversed = T)
(letras <- rownames_to_column(as.data.frame(cld.tukey$tratamiento$Letters)))
colnames(letras) <- c("tratamiento", "tukey")
tabla_summ <- merge(tabla_summ, letras)
} else {
tabla_summ$tukey <- c("", "", "")
}
(p <- barras_tfm())
(p <- p + annotate("text", x = 2, y = 1.3 * (max(tabla_summ$media) + max(tabla_summ$error)), label = "paste(italic(Tentacle))", size = 5, color = "gray30", parse = T))
ggsave(paste0("./resultados/2/", i, "_tent.png"), width = 400, height = 500, units = "px", scale = 2, dpi = "retina")
}
