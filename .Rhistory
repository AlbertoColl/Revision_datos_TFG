})
sapply(modelos, function(x){
print(shapiro.test(residuals(x))) # No hay problemas con normalidad de residuos
print(leveneTest(x)) # No se por que no funciona
})
leveneTest(modelos[[6]])
leveneTest(modelos[[11]])
leveneTest(modelos[[12]])
leveneTest(modelos[[13]])
leveneTest(modelos[[14]])
leveneTest(modelos[[15]])
leveneTest(modelos[[16]])
leveneTest(modelos[[17]])
### SETUP ----
library(tidyverse)
library(ggthemr)
setwd("D:/collf/Documents/GitHub/TFG-Alberto-Coll")
# Llamamos el script de lectura
#source(file = "./scripts/0_data_lab.R") # Laboratorio
source(file = "./scripts/0_data_home.R") # En casa
datos <- datos %>% filter(cultivo == "Si")
# Definimos el tema de las gráficas
theme_ortimar <- function(){
theme(panel.background = element_blank(),
axis.text.x = element_text(size = 10),
plot.title = element_text(hjust = 0.5),
strip.text.x = element_text(size = 11, face = "bold", vjust = 4),
axis.title.y = element_text(size = 14)
)
}
# Revisar el codigo porque estaba hecho con tejido en variable
barras <- function(data){
ggplot(data = l_data) +
geom_errorbar(aes(x = playa, ymax = media + error, ymin = media - error),
color = "grey40", width =  0.7) +
geom_col(aes(x = playa, y = media, fill = corte)) +
geom_text(aes(x = playa, y = media + error, label = tukey),
color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina" ~ "Protein concentration",
i == "MDA" ~ "MDA concentration",
i == "TEAC" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity in pedal disk and tentacle\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina" ~ "mg/ml",
i == "MDA" ~ "μM",
i == "TEAC" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
}
for (i in colnames(datos[6:25])) {
print(i)
n <-  n + 1
#tukey <- letras[[n]] # Solo para incorporar test de Tukey
l_data <- datos %>%
group_by(playa, corte) %>%
summarise(
media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i))))
)
print(barras(l_data))
ggsave(paste0("graficas/", i, "_c1.png"), width = 1000, height = 750, units = "px",
scale = 2, dpi = "retina")
}
# Revisar el codigo porque estaba hecho con tejido en variable
barras <- function(data){
ggplot(data = l_data) +
geom_errorbar(aes(x = playa, ymax = media + error, ymin = media - error),
color = "grey40", width =  0.7) +
geom_col(aes(x = playa, y = media, fill = corte)) +
#geom_text(aes(x = playa, y = media + error, label = tukey),
color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
for (i in colnames(datos[6:25])) {
print(i)
n <-  n + 1
#tukey <- letras[[n]] # Solo para incorporar test de Tukey
l_data <- datos %>%
group_by(playa, corte) %>%
summarise(
media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i))))
)
print(barras(l_data))
ggsave(paste0("graficas/", i, "_c1.png"), width = 1000, height = 750, units = "px",
scale = 2, dpi = "retina")
}
?case_when()
# Revisar el codigo porque estaba hecho con tejido en variable
barras <- function(data){
ggplot(data = l_data) +
geom_errorbar(aes(x = corte, ymax = media + error, ymin = media - error),
color = "grey40", width =  0.7) +
geom_col(aes(x = corte, y = media, fill = playa)) +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
}
for (i in colnames(datos[6:25])) {
print(i)
n <-  n + 1
#tukey <- letras[[n]] # Solo para incorporar test de Tukey
l_data <- datos %>%
group_by(playa, corte) %>%
summarise(
media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i))))
)
print(barras(l_data))
ggsave(paste0("graficas/", i, "_c1.png"), width = 1000, height = 750, units = "px",
scale = 2, dpi = "retina")
}
# Revisar el codigo porque estaba hecho con tejido en variable
barras <- function(data){
ggplot(data = l_data) +
geom_errorbar(aes(x = corte, ymax = media + error, ymin = media - error),
color = "grey40", width =  0.7) +
geom_col(aes(x = corte, y = media, fill = playa), position = position_dodge()) +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
}
for (i in colnames(datos[6:25])) {
print(i)
n <-  n + 1
#tukey <- letras[[n]] # Solo para incorporar test de Tukey
l_data <- datos %>%
group_by(playa, corte) %>%
summarise(
media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i))))
)
print(barras(l_data))
ggsave(paste0(".resultados/graficas/", i, "_c1.png"), width = 1000, height = 750, units = "px",
scale = 2, dpi = "retina")
}
# Revisar el codigo porque estaba hecho con tejido en variable
barras <- function(data){
ggplot(data = l_data) +
geom_errorbar(aes(x = corte, ymax = media + error, ymin = media - error),
color = "grey40", width =  0.7, position = position_dodge()) +
geom_col(aes(x = corte, y = media, fill = playa), position = position_dodge()) +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
}
for (i in colnames(datos[6:25])) {
print(i)
n <-  n + 1
#tukey <- letras[[n]] # Solo para incorporar test de Tukey
l_data <- datos %>%
group_by(playa, corte) %>%
summarise(
media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i))))
)
print(barras(l_data))
ggsave(paste0("./resultados/graficas/", i, "_c1.png"), width = 1000, height = 750, units = "px",
scale = 2, dpi = "retina")
}
# Revisar el codigo porque estaba hecho con tejido en variable
barras <- function(data){
ggplot(data = l_data) +
geom_errorbar(aes(x = playa, ymax = media + error, ymin = media - error),
color = "grey40", width =  0.7, position = position_dodge()) +
geom_col(aes(x = playa, y = media, fill = corte), position = position_dodge()) +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
}
for (i in colnames(datos[6:25])) {
print(i)
n <-  n + 1
#tukey <- letras[[n]] # Solo para incorporar test de Tukey
l_data <- datos %>%
group_by(playa, corte) %>%
summarise(
media = mean(get(i), na.rm = T),
desvest = sd(get(i), na.rm = T),
error = desvest/sqrt(sum(!is.na(get(i))))
)
print(barras(l_data))
ggsave(paste0("./resultados/graficas/", i, "_c1.png"), width = 1000, height = 750, units = "px",
scale = 2, dpi = "retina")
}
?geom_errorbar()
ggplot(data = l_data) +
geom_errorbar(aes(x = playa, ymax = media + error, ymin = media - error),
color = "grey40", width =  0.7, position = "identity" ) +
geom_col(aes(x = playa, y = media, fill = corte), position =  position_dodge()) +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
ggplot(data = l_data) +
geom_errorbar(aes(x = playa, ymax = media + error, ymin = media - error),
color = "grey40", width =  0.7, position = "dodge" ) +
geom_col(aes(x = playa, y = media, fill = corte), position =  position_dodge()) +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
ggplot(data = l_data) +
geom_errorbar(aes(x = playa, ymax = media + error, ymin = media - error, group = corte),
color = "grey40", width =  0.7, position = "dodge" ) +
geom_col(aes(x = playa, y = media, fill = corte), position =  position_dodge()) +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
# Revisar el codigo porque estaba hecho con tejido en variable
barras <- function(data){
ggplot(data = l_data) +
geom_errorbar(aes(x = corte, ymax = media + error, ymin = media - error, group = playa),
color = "grey40", width =  0.7, position = "dodge" ) +
geom_col(aes(x = corte, y = media, fill = playa), position =  position_dodge()) +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
}
function (..., list = character(), package = NULL, lib.loc = NULL,
verbose = getOption("verbose"), envir = .GlobalEnv, overwrite = TRUE)
ggplot(data = l_data) +
geom_errorbar(aes(x = corte, ymax = media + error, ymin = media - error, group = playa),
color = "grey40", width =  0.7, position = "dodge" ) +
geom_col(aes(x = corte, y = media, fill = playa), position =  position_dodge()) +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
ggplot(data = l_data) +
geom_errorbar(aes(x = corte, ymax = media + error, ymin = media - error, group = playa),
color = "grey40", width =  0.7, position = "dodge" ) +
geom_col(aes(x = corte, y = media, fill = playa), position =  position_dodge()) +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
# Revisar el codigo porque estaba hecho con tejido en variable
barras <- function(data){
ggplot(data = l_data) +
geom_errorbar(aes(x = corte, ymax = media + error, ymin = media - error, group = playa),
color = "grey40", width =  0.7) +
geom_col(aes(x = corte, y = media, fill = playa)) +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
}
ggplot(data = l_data) +
geom_errorbar(aes(x = corte, ymax = media + error, ymin = media - error, group = playa),
color = "grey40", width =  0.7) +
geom_col(aes(x = corte, y = media, fill = playa)) +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
ggplot(data = l_data) +
geom_errorbar(aes(x = corte, ymax = media + error,
ymin = media - error, group = playa),
color = "grey40", width =  0.7, position = "dodge2" ) +
geom_col(aes(x = corte, y = media, fill = playa), position = "dodge2") +
# geom_text(aes(x = playa, y = media + error, label = tukey),
# color = "grey5", vjust = -0.5, size = 4) + # Solo si quieres letras
labs(title = case_when(
i == "proteina_p" ~ "Protein concentration",
i == "proteina_t" ~ "Protein concentration",
i == "MDA_t" ~ "MDA concentration",
i == "MDA_p" ~ "MDA concentration",
i == "TEAC_p" ~ "Trolox equivalent antioxidant capacity (TEAC)",
i == "TEAC_t" ~ "Trolox equivalent antioxidant capacity (TEAC)",
TRUE ~ paste( i,"activity\n\n")),
fill = "Sampling\npoint") +
ylab(case_when(
i == "proteina_p" ~ "mg/ml",
i == "proteina_t" ~ "mg/ml",
i == "MDA_t" ~ "μM",
i == "MDA_p" ~ "μM",
i == "TEAC_t" ~ "μM Trolox equivalent",
i == "TEAC_p" ~ "μM Trolox equivalent",
TRUE ~ "U / mg  of protein")) +
xlab("") +
scale_fill_manual(values = c("#414066", "#69B4AB", "#FBBC4C")) +
theme_ortimar()
