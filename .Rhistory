library(tidyverse)
library(ggthemr)
library(multcompView)
library(car)
setwd("D:/collf/Documents/GitHub/TFG-Alberto-Coll")
# Llamamos el script de lectura
#source(file = "./scripts/0_data_lab.R") # Laboratorio
source(file = "./scripts/0_data_home.R") # En casa
datos <- datos %>% filter(cultivo == "Si")
source(file = "./scripts/1_descriptiva_cultivadas.R")
View(interact)
View(interact)
formulas <- sapply(colnames(datos[c(6:25)]), function(x){as.formula(paste0(x, " ~ playa + corte * tiempo"))}) # En el analisis extendido vamos a ver la interaccion entre corte y tiempo, ademas de incluir el factor playa
View(formulas)
modelos <- sapply(formulas, function(x){aov(x, datos)})
n <-  6
for (i in modelos) {
saveRDS(i, file = paste0("./resultados/modelos/aov.", colnames(datos[n]), "_1.RDS"))
n <- n + 1
}
n <-  6
for (i in modelos) {
saveRDS(i, file = paste0("./resultados/modelos/modelo", colnames(datos[n]), "_extendido.RDS"))
n <- n + 1
}
a <- readRDS(file = "./resultados/modelos/modeloDTD_p_extendido.RDS")
View(a)
sapply(modelos, function(x){
print(shapiro.test(residuals(x))) # No hay problemas con normalidad de residuos
print(leveneTest(x))
})
sapply(modelos, function(x){
print(shapiro.test(residuals(x))) # No hay problemas con normalidad de residuos
#print(leveneTest(x))
})
sapply(modelos, function(x){
plot(x)
})
sapply(modelos, function(x){
n <-  6
print(colnames(datos[n]))
shapiro.test(residuals(x)) # No hay problemas con normalidad de residuos en ningún caso, lo cual esta genial
n <- n + 1
})
n <-  6
sapply(modelos, function(x){
shapiro.test(residuals(x)) # No hay problemas con normalidad de residuos en ningún caso, lo cual esta genial
print(colnames(datos[n]))
n <- n + 1
})
n <-  6
sapply(modelos, function(x){
shapiro.test(residuals(x)) # No hay problemas con normalidad de residuos en ningún caso, lo cual esta genial
print(colnames(datos[n]))
n <- n + 1
})
n <-  6
sapply(modelos, function(x){
print(colnames(datos[n]))
shapiro.test(residuals(x)) # No hay problemas con normalidad de residuos en ningún caso, lo cual esta genial
n <- n + 1
})
modelo[[1]]
modelos[[1]]$call
modelos[[1]]$terms
View(modelos)
modelos[[1]]$terms[[2]]
sapply(modelos, function(x){
print(x$terms[[2]])
shapiro.test(residuals(x)) # No hay problemas con normalidad de residuos en ningún caso, lo cual esta genial
})
sapply(modelos, function(x){
shapiro.test(residuals(x)) # No hay problemas con normalidad de residuos en ningún caso, lo cual esta genial
})
sapply(modelos, function(x){
shapiro.test(residuals(x)) # No hay problemas con normalidad de residuos en ningún caso, lo cual esta genial
})
sapply(modelos, function(x){
print(shapiro.test(residuals(x))) # No hay problemas con normalidad de residuos en ningún caso, lo cual esta genial
})
sapply(modelos, function(x){
print(x$terms[[2]])
plot(x)
})
sapply(modelos, function(x){
print(x$terms[[2]])
plot(x, which = 3)
})
sapply(modelos, function(x){
print(x$terms[[2]])
print(plot(x, which = 3))
})
sapply(modelos, function(x){
print(x$terms[[2]])
(plot(x, which = 3))
})
sapply(modelos, function(x){
plot(x, which = 3)
title(main = x$terms[[2]])
})
sapply(modelos, function(x){
plot(x, which = 3)
title(main = x$terms[[2]])
})
sapply(modelos, function(x){
(plot(x, which = 3))
title(main = x$terms[[2]])
})
sapply(modelos, function(x){
plot(x, which = 3)
title(main = x$terms[[2]])
})
# Ahora comprobamos los modelos a ver que tal y en cuales quitamos interaccion (o playa)
sapply(modelos, summary())
# Ahora comprobamos los modelos a ver que tal y en cuales quitamos interaccion (o playa)
sapply(modelos, summary(x))
# Ahora comprobamos los modelos a ver que tal y en cuales quitamos interaccion (o playa)
sapply(modelos, summary(modelos))
# Ahora comprobamos los modelos a ver que tal y en cuales quitamos interaccion (o playa)
sapply(modelos, function(x){
summary(x)
})
modelos <- sapply(formulas, function(x){lm(x, datos)})
### SETUP ----
library(tidyverse)
library(ggthemr)
library(multcompView)
library(car)
# Directorio en laboratorio: C:/Users/Usuario/Documents/TFG Alberto Coll
# Directorio en portatil: D:/collf/Documents/GitHub/TFG-Alberto-Coll
setwd("D:/collf/Documents/GitHub/TFG-Alberto-Coll")
# Llamamos el script de lectura
#source(file = "./scripts/0_data_lab.R") # Laboratorio
source(file = "./scripts/0_data_home.R") # En casa
datos <- datos %>% filter(cultivo == "Si")
source(file = "./scripts/1_descriptiva_cultivadas.R") # Para tener las funciones de las graficas
formulas <- sapply(colnames(datos[c(6:25)]), function(x){as.formula(paste0(x, " ~ playa + corte * tiempo"))}) # En el analisis extendido vamos a ver la interaccion entre corte y tiempo, ademas de incluir el factor playa
modelos <- sapply(formulas, function(x){lm(x, datos)})
View(modelos)
# Ahora comprobamos los modelos a ver que tal y en cuales quitamos interaccion (o playa)
sapply(modelos, function(x){
summary(x)
})
