panel.background = element_rect(fill = "white")) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "white", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
ggsave("grafica_especies.png", width = 5000 , height = 2500, units = "px", scale = 2, dpi = "retina")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "white", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
ggsave("grafica_especies.png", width = 5000 , height = 4000, units = "px", scale = 2, dpi = "retina")
?theme_minimal()
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_light() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "gray99", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
ggsave("grafica_especies.png", width = 5000 , height = 4000, units = "px", scale = 2, dpi = "retina")
ggsave("grafica_especies.png", width = 4000 , height = 2000, units = "px", scale = 2, dpi = "retina")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "gray99", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Nº de especies")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank()) +
xlab("") +
ylab("Nº de individuos")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Nº de individuos")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Nº de individuos")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Promedio de número de especies")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Promedio de número de individuos")
### Graficas para Aitana
# 24/10/2023 - 27/10/2023
### Setup y cargar datos ----
# IMPORTANTE: SI NO TIENES INSTALADOS ESTOS PAQUETES, INSTALALOS PRIMERO ANTES DE CARGARLOS
#install.packages("tidyverse")
library(tidyverse)
setwd("D:/collf/Documents") # Aqui tienes que poner la direccion de carpeta donde tienes los datos o quiras guardar el archivo y las graficas
datos <- read.csv2("graficas aitana.csv", encoding = "latin1", dec = ".")
summary(datos) # Aqui pones el nombre del archivo con los datos, o pones "clipboard" para pegarlos como me enseñaste. Asegurate que el separador decimal (dec) esta bien
# Cambiar el tipo de variable y ordenar los niveles
datos$estacion <- as.factor(datos$estacion)
datos$tramo <- as.factor(datos$tramo)
datos$estacion <- ordered(datos$estacion, levels = c("OTOÑO", "INVIERNO", "PRIMAVERA", "VERANO"))
### Cambiar a formato largo ----
# Necesitamos una nueva variable (tipo), que pueda tomar los valores promedio, exotica o amenazada. La función gather() del paquete tidyr hace esto
# Lo hago separando los datos de especies e individuos porque no me apetece pensar
datos_especies <- gather(datos, key = tipo, value = species, sp_promedio:sp_amenzadas) %>% select(estacion, tramo, tipo, species)
datos_especies$tipo <- as.factor(datos_especies$tipo)
datos_especies$tipo <- factor(datos_especies$tipo, levels = c("sp_amenzadas", "sp_promedio", "sp_exoticas"))
datos_individuos <- gather(datos, key = tipo, value = individuos, ind_promedio:ind_amenazadas) %>% select(estacion, tramo, tipo, individuos)
datos_individuos$tipo <- as.factor(datos_individuos$tipo)
datos_individuos$tipo <- factor(datos_individuos$tipo, levels = c("ind_amenazadas", "ind_promedio", "ind_exoticas"))
### Graficas ----
# PARA CAMBIAR COLORES: donde pone values = c(....), estan los 12 colores ordenados. La primera y ultima fila son para amenazadas y para exóticas, pero le tienes que poner el mismo color 4 veces. La fila de en medio para los tramos, ordenados del 1 al 4.
# Para cambiar el color necesitas solo el codigo hex del color y lo pones, importante no borrar las comillas.
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
guides(color = FALSE) +
xlab("") +
ylab("Promedio de número de especies")
# Grafica de numero de especies
(plot_especies <- ggplot(datos_especies) +
geom_col(aes(x = tramo, y = species, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Promedio de número de especies")
# Grafica de numero de individuos
(plot_individuos <- ggplot(datos_individuos) +
geom_col(aes(x = tramo, y = individuos, group = tipo:tramo, fill = tipo:tramo), position = position_stack()) +
facet_grid(~estacion, switch = "x")) +
scale_fill_manual(labels = c("Amenazadas","Amenazadas","Amenazadas","Amenazadas",
"Tramo 1","Tramo 2","Tramo 3","Tramo 4",
"Exóticas","Exóticas","Exóticas","Exóticas"),
name = NULL,
values = c("#EE9B00","#EE9B00","#EE9B00","#EE9B00",
"#5b7234","#7b7b7b","#dcdcdc","#b3d374",
"#d55d92","#d55d92","#d55d92","#d55d92")) +
theme_minimal() +
theme(strip.placement = "outside",
strip.background = element_rect(fill = NA, color = "white"),
panel.spacing = unit(0.2,"cm"),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "gray99", color = NA)) +
xlab("") +
ylab("Promedio de número de individuos")
setwd("D:/collf/Documents/DATOS ISMAEL.csv")
setwd("D:/collf/Documents")
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(tratamiento = as.factor(tratamiento))
ibrary(tidyverse)
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(tratamiento = as.factor(tratamiento))
library(tidyverse)
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(tratamiento = as.factor(tratamiento))
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(Tratamiento = as.factor(Tratamiento))
View(datos)
## Definicion del tema y formato de las graficas ----
theme_tfm <- function(){
theme(panel.background = element_rect(fill = "gray99"),
axis.text = element_text(size = 9),
plot.title = element_text(size = 14, face = "bold", hjust = 1),
strip.text.x = element_text(size = 12, face = "bold", vjust = 0),
axis.title = element_text(size = 12),
legend.position = "none",
panel.grid = element_blank(),
axis.line = element_line(colour = "gray10"),
axis.ticks = element_line(color = "gray10"))
#strip.background = element_rect(colour = "black")
}
p_sod <- ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_col()
(p_sod <- ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_col()
)
(p_sod <- ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_errorbar(aes(ymax = SOD + SEM_SOD, ymin = SOD - SEM_SOD)) +
geom_col() +
)
(p_sod <- ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_errorbar(aes(ymax = SOD + SEM_SOD, ymin = SOD - SEM_SOD)) +
geom_col() +
)
ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_errorbar(aes(ymax = SOD + SEM_SOD, ymin = SOD - SEM_SOD)) +
geom_col()
GEOM_ERRORBAR()
?geom_errorbar()
ggplot(datos, aes(x = Tratamiento, y = SOD)) +
geom_errorbar(aes(ymax = (SOD + SEM_SOD), ymin = (SOD - SEM_SOD))) +
geom_col()
summary(datos)
?read.csv2()
datos <- read.csv2("./DATOS ISMAEL.csv", numerals = "warn.loss", encoding = "latin1", colClasses = "numeric")%>%
mutate(Tratamiento = as.factor(Tratamiento))
as.numeric(SOD)
as.numeric(datos$SOD)
ggplot(datos, aes(x = Tratamiento, y = as.numeric(SOD))) +
geom_errorbar(aes(ymax = as.numeric(SOD) +as.numeric(SEM_SOD), ymin = as.numeric(SOD)-as.numeric(SEM_SOD))) +
geom_col()
library(tidyverse)
library(car)
library(multcompView)
library(patchwork)
library(rstatix)
library(ggpubr)
#setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
setwd("D:/collf/Documents/GitHub/Revision_datos_TFG")
datos <- read.csv2("./datos/TFG_datos_2024.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(playa = as.factor(playa), cultivo = as.factor(cultivo),
corte = as.factor(corte), tiempo = as.factor(madurez)) %>%
select(-madurez)
library(tidyverse)
datos <- read.csv2("./datos/TFG_datos_2024.csv", numerals = "warn.loss", encoding = "latin1")%>%
mutate(playa = as.factor(playa), cultivo = as.factor(cultivo),
corte = as.factor(corte), tiempo = as.factor(madurez)) %>%
select(-madurez)
# ORTIMAR - Objetivo 2
# Analisis efecto del corte
# Febrero 2025 - revision para publicacion
# Vamos a hacer un diseño cuadrado 2x2 dentro de las anemonas cultivadas: la variable corte, que tiene 2 niveles (dissected y control), y la variable tiempo, con niveles 0 y 1. De esa manera esperamos ver el efecto del corte a corto y largo plazo.
# H0: No hay diferencias entre el estado oxidativo de anémonas control y cortadas. H1: Sí existen alguna diferencia.
# H0: No hay interacción entre el corte y el tiempo en cultivo. H1: Hay interacción entre el corte y el tiempo en cultivo.
# H0: No hay diferencias en el estado oxidativo al estar en cultivo a largo plazo. H1: Hay diferencias en el estado oxidativo al estar en cultivo a largo plazo.
# Las muestras son independientes temporalmente ya que no se trata del mismo animal (mismo cestillo?)
# ESTE SCRIPT ES LA VERSION SIN DISCRIMINAR POR PLAYA DE ORIGEN
# Aunque sabemos que siguen tendencias ligeramente diferentes, no tenemos tamaño de muestra para incluirlo como factor en el analisis. La otra opcion es agrupar por playa y hacer los test 3 veces cada uno
# Update 05/3: AL final del script he hecho los analisis separando por playa y no salen muy bonitos, volvemos a perder tamaño de muestra y la interpretacion suele ser identica o muy similar a los resultados agrupando playas.
library(tidyverse)
library(multcompView)
library(car)
library(rstatix)
library(ggpubr)
### SETUP y filtrado de datos ----
#setwd("C:/Users/Usuario/Documents/GitHub/Revision_datos_TFG")
setwd("D:/collf/Documents/GitHub/Revision_datos_TFG")
#source(file = "./scripts septiembre 2024-2025/0_data_lab.R")
source(file = "./scripts septiembre 2024-2025/0_data_laptop.R")
source(file = "./scripts septiembre 2024-2025/1_funciones_graficas.R")
# Filtrar: solo anemonas cultivadas
data_2 <- filter(datos, cultivo == "cultured")
### Exploracion ----
ggplot(data_2, aes(y = Fbasica_p)) +
geom_boxplot(aes(x = tiempo:corte, color = tiempo:corte), alpha = 0) +
geom_point(aes(x = tiempo:corte, color = tiempo:corte), alpha = 1, size = 2)
# Problema: salobreña sigue una tendencia diferente en algunas enzimas como la catalasa
# Deteccion de outliers en SOD_t y CAT_t para normalidad de residuos
view(data_2 %>%
group_by(corte:tiempo) %>%
identify_outliers(CAT_t))
# Se eliminan:
data_2$SOD_t[7] <- NA
data_2$SOD_t[3] <- NA
data_2$CAT_t[35] <- NA # La funcion ha identificado otro, pero su eliminacion no afecta a la normalidad de residuos, este si.
data_2$Mielo_p[26] <- NA
data_2$Mielo_t[18] <- NA #Sospechoso, y afecta a normalidad
data_2$Facida_p[30] # sospechoso, outlier no extremo
data_2$Fbasica_p[12] <- NA # outlier extremo
data_2$Fbasica_t[9] <- NA # Afecta a homocedasticidad
data_2$Lisozima_p[33] <- NA # outlier extremo
data_2$Lisozima_p[34] <- NA # outlier extremo
data_2$Lisozima_p[2] <- NA # outlier extremo
### Ajuste de modelos ----
# Si se elimina alguna enzima al final, eliminarla aquí
#data_2 <- data_2 %>%   select(-Lisozima_p, -GPx_t, -GPx_p)
# Ajuste de modelos ANOVA con rstatix
modelos <- lapply(colnames(data_2[c(5:31)]), function(x){
anova_test(formula = as.formula(paste0(x, " ~ corte * tiempo")), data_2)})
(anova_results <- reduce(modelos, full_join) %>%
add_column(.before = 1, variable = rep(colnames(data_2[c(5:31)]), each = 3)) %>%
adjust_pvalue(method = "BH"))
# Test de Levene se computa exactamente igual
modelos_levene <- lapply(colnames(data_2[c(5:31)]), function(x){
levene_test(formula = as.formula(paste0(x, " ~ corte * tiempo")), data_2)})
(levene_results <- reduce(modelos_levene, full_join) %>%
add_column(.before = 1, variable = colnames(data_2[c(5:31)])))
# Para el test de Shapiro-Wilks se ajustan lm para extraer residuos
modelos_lm <- lapply(colnames(data_2[c(5:31)]), function(x){
lm(formula = as.formula(paste0(x, " ~ corte * tiempo")), data_2)})
modelos_shapiro <- lapply(modelos_lm, function(x){
shapiro_test(residuals(x))})
(shapiro_results <- reduce(modelos_shapiro, full_join) %>%
add_column(.before = 1, parametro = colnames(data_2[c(5:31)])))
n <- 1
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(corte:tiempo) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`corte:tiempo`, ":", names = c("tratamiento", "tiempo"), cols_remove=F)
(any(filter(as.tibble(anova_results), variable == i)$p.adj <= 0.05, na.rm = T))
(any(filter(as.tibble(anova_results), variable == i)$p.adj <= 0.05, na.rm = T))
(any(filter(as.tibble(anova_results), variable == i)$p.adj <= 0.05,
na.rm = T))
n-2
n = 2
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(corte:tiempo) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`corte:tiempo`, ":", names = c("tratamiento", "tiempo"), cols_remove=F)
(any(filter(as.tibble(anova_results), variable == i)$p.adj <= 0.05,
na.rm = T))
n= 3
i <- colnames(data_2[5:31])[[n]]
tabla_summ <- data_2 %>% group_by(corte:tiempo) %>%
get_summary_stats(i, type = "mean_se") %>%
separate_wider_delim(`corte:tiempo`, ":", names = c("tratamiento", "tiempo"), cols_remove=F)
(any(filter(as.tibble(anova_results), variable == i)$p.adj <= 0.05,
na.rm = T))
(filter(as.tibble(anova_results), variable == i)$p.adj <= 0.05
)
(filter(as.tibble(anova_results), variable == i)$p.adj[3] <= 0.05)
(filter(as.tibble(anova_results), variable == i)$p.adj[2] <= 0.05)
(filter(as.tibble(anova_results), variable == i)$p.adj[1] <= 0.05)
(filter(as.tibble(anova_results), variable == i)$p.adj[-3] <= 0.05)
posthoc <- function(x){
if (any(filter(as.tibble(anova_results), variable == i)$p.adj <= 0.05, na.rm = T)){
print("Hay algun efecto significativo")
if (filter(as.tibble(anova_results), variable == i)$p.adj[3] <= 0.05){
print("La interaccion es significativa")
}
else{
print("La interaccion no es significativa")
}
if (any(filter(as.tibble(anova_results), variable == i)$p.adj[-3] <= 0.05, na.rm = F)){
print("Un efecto principal es significativo")
}
else{
print("Dos efectos principales son significativos")
}
}
else{print("No hay ningun efecto significativo")}
}
posthoc <- function(){
if (any(filter(as.tibble(anova_results), variable == i)$p.adj <= 0.05, na.rm = T)){
print("Hay algun efecto significativo")
if (filter(as.tibble(anova_results), variable == i)$p.adj[3] <= 0.05){
print("La interaccion es significativa")
}
else{
print("La interaccion no es significativa")
}
if (any(filter(as.tibble(anova_results), variable == i)$p.adj[-3] <= 0.05, na.rm = F)){
print("Un efecto principal es significativo")
}
else{
print("Dos efectos principales son significativos")
}
}
else{print("No hay ningun efecto significativo")}
}
posthoc()
posthoc <- function(){
if (any(filter(as.tibble(anova_results), variable == i)$p.adj <= 0.05, na.rm = T)){
print("Hay algun efecto significativo")
if (filter(as.tibble(anova_results), variable == i)$p.adj[3] <= 0.05){
print("La interaccion es significativa")
}
else{
print("La interaccion no es significativa")
if (any(filter(as.tibble(anova_results), variable == i)$p.adj[-3] <= 0.05, na.rm = F)){
print("Un efecto principal es significativo")
}
else{
print("Dos efectos principales son significativos")
}
}
}
else{print("No hay ningun efecto significativo")}
}
posthoc()
